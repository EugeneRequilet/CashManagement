'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="CM")>  _
Partial Public Class DailyShiftDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertDailyShift(instance As DailyShift)
    End Sub
  Partial Private Sub UpdateDailyShift(instance As DailyShift)
    End Sub
  Partial Private Sub DeleteDailyShift(instance As DailyShift)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CashManagement.My.MySettings.Default.CMConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property DailyShifts() As System.Data.Linq.Table(Of DailyShift)
		Get
			Return Me.GetTable(Of DailyShift)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DailyShift")>  _
Partial Public Class DailyShift
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RecordId As Integer
	
	Private _DailyShiftHeaderRecordId As Integer
	
	Private _Date As Date
	
	Private _StartTime As Date
	
	Private _EndTime As Date
	
	Private _Hours As System.Nullable(Of System.TimeSpan)
	
	Private _ThisShiftEmployeeRecordId As Integer
	
	Private _EmployeeRecordId As Integer
	
	Private _DefaultShiftRecordId As Integer
	
	Private _EmployeeStartTime As Date
	
	Private _EmployeeEndTime As Date
	
	Private _EmployeeHours As System.Nullable(Of System.TimeSpan)
	
	Private _Memo As String
	
	Private _ClockStartTime As Date
	
	Private _ClockEndTime As Date
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRecordIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecordIdChanged()
    End Sub
    Partial Private Sub OnDailyShiftHeaderRecordIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnDailyShiftHeaderRecordIdChanged()
    End Sub
    Partial Private Sub OnDateChanging(value As Date)
    End Sub
    Partial Private Sub OnDateChanged()
    End Sub
    Partial Private Sub OnStartTimeChanging(value As Date)
    End Sub
    Partial Private Sub OnStartTimeChanged()
    End Sub
    Partial Private Sub OnEndTimeChanging(value As Date)
    End Sub
    Partial Private Sub OnEndTimeChanged()
    End Sub
    Partial Private Sub OnHoursChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoursChanged()
    End Sub
    Partial Private Sub OnThisShiftEmployeeRecordIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnThisShiftEmployeeRecordIdChanged()
    End Sub
    Partial Private Sub OnEmployeeRecordIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnEmployeeRecordIdChanged()
    End Sub
    Partial Private Sub OnDefaultShiftRecordIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnDefaultShiftRecordIdChanged()
    End Sub
    Partial Private Sub OnEmployeeStartTimeChanging(value As Date)
    End Sub
    Partial Private Sub OnEmployeeStartTimeChanged()
    End Sub
    Partial Private Sub OnEmployeeEndTimeChanging(value As Date)
    End Sub
    Partial Private Sub OnEmployeeEndTimeChanged()
    End Sub
    Partial Private Sub OnEmployeeHoursChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnEmployeeHoursChanged()
    End Sub
    Partial Private Sub OnMemoChanging(value As String)
    End Sub
    Partial Private Sub OnMemoChanged()
    End Sub
    Partial Private Sub OnClockStartTimeChanging(value As Date)
    End Sub
    Partial Private Sub OnClockStartTimeChanged()
    End Sub
    Partial Private Sub OnClockEndTimeChanging(value As Date)
    End Sub
    Partial Private Sub OnClockEndTimeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecordId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RecordId() As Integer
		Get
			Return Me._RecordId
		End Get
		Set
			If ((Me._RecordId = value)  _
						= false) Then
				Me.OnRecordIdChanging(value)
				Me.SendPropertyChanging
				Me._RecordId = value
				Me.SendPropertyChanged("RecordId")
				Me.OnRecordIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DailyShiftHeaderRecordId", DbType:="Int NOT NULL")>  _
	Public Property DailyShiftHeaderRecordId() As Integer
		Get
			Return Me._DailyShiftHeaderRecordId
		End Get
		Set
			If ((Me._DailyShiftHeaderRecordId = value)  _
						= false) Then
				Me.OnDailyShiftHeaderRecordIdChanging(value)
				Me.SendPropertyChanging
				Me._DailyShiftHeaderRecordId = value
				Me.SendPropertyChanged("DailyShiftHeaderRecordId")
				Me.OnDailyShiftHeaderRecordIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Date", Storage:="_Date", DbType:="Date NOT NULL")>  _
	Public Property [Date]() As Date
		Get
			Return Me._Date
		End Get
		Set
			If ((Me._Date = value)  _
						= false) Then
				Me.OnDateChanging(value)
				Me.SendPropertyChanging
				Me._Date = value
				Me.SendPropertyChanged("[Date]")
				Me.OnDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartTime", DbType:="DateTime NOT NULL")>  _
	Public Property StartTime() As Date
		Get
			Return Me._StartTime
		End Get
		Set
			If ((Me._StartTime = value)  _
						= false) Then
				Me.OnStartTimeChanging(value)
				Me.SendPropertyChanging
				Me._StartTime = value
				Me.SendPropertyChanged("StartTime")
				Me.OnStartTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndTime", DbType:="DateTime NOT NULL")>  _
	Public Property EndTime() As Date
		Get
			Return Me._EndTime
		End Get
		Set
			If ((Me._EndTime = value)  _
						= false) Then
				Me.OnEndTimeChanging(value)
				Me.SendPropertyChanging
				Me._EndTime = value
				Me.SendPropertyChanged("EndTime")
				Me.OnEndTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hours", AutoSync:=AutoSync.Always, DbType:="Time", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Hours() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._Hours
		End Get
		Set
			If (Me._Hours.Equals(value) = false) Then
				Me.OnHoursChanging(value)
				Me.SendPropertyChanging
				Me._Hours = value
				Me.SendPropertyChanged("Hours")
				Me.OnHoursChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ThisShiftEmployeeRecordId", DbType:="Int NOT NULL")>  _
	Public Property ThisShiftEmployeeRecordId() As Integer
		Get
			Return Me._ThisShiftEmployeeRecordId
		End Get
		Set
			If ((Me._ThisShiftEmployeeRecordId = value)  _
						= false) Then
				Me.OnThisShiftEmployeeRecordIdChanging(value)
				Me.SendPropertyChanging
				Me._ThisShiftEmployeeRecordId = value
				Me.SendPropertyChanged("ThisShiftEmployeeRecordId")
				Me.OnThisShiftEmployeeRecordIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeRecordId", DbType:="Int NOT NULL")>  _
	Public Property EmployeeRecordId() As Integer
		Get
			Return Me._EmployeeRecordId
		End Get
		Set
			If ((Me._EmployeeRecordId = value)  _
						= false) Then
				Me.OnEmployeeRecordIdChanging(value)
				Me.SendPropertyChanging
				Me._EmployeeRecordId = value
				Me.SendPropertyChanged("EmployeeRecordId")
				Me.OnEmployeeRecordIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DefaultShiftRecordId", DbType:="Int NOT NULL")>  _
	Public Property DefaultShiftRecordId() As Integer
		Get
			Return Me._DefaultShiftRecordId
		End Get
		Set
			If ((Me._DefaultShiftRecordId = value)  _
						= false) Then
				Me.OnDefaultShiftRecordIdChanging(value)
				Me.SendPropertyChanging
				Me._DefaultShiftRecordId = value
				Me.SendPropertyChanged("DefaultShiftRecordId")
				Me.OnDefaultShiftRecordIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeStartTime", DbType:="DateTime NOT NULL")>  _
	Public Property EmployeeStartTime() As Date
		Get
			Return Me._EmployeeStartTime
		End Get
		Set
			If ((Me._EmployeeStartTime = value)  _
						= false) Then
				Me.OnEmployeeStartTimeChanging(value)
				Me.SendPropertyChanging
				Me._EmployeeStartTime = value
				Me.SendPropertyChanged("EmployeeStartTime")
				Me.OnEmployeeStartTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeEndTime", DbType:="DateTime NOT NULL")>  _
	Public Property EmployeeEndTime() As Date
		Get
			Return Me._EmployeeEndTime
		End Get
		Set
			If ((Me._EmployeeEndTime = value)  _
						= false) Then
				Me.OnEmployeeEndTimeChanging(value)
				Me.SendPropertyChanging
				Me._EmployeeEndTime = value
				Me.SendPropertyChanged("EmployeeEndTime")
				Me.OnEmployeeEndTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeHours", AutoSync:=AutoSync.Always, DbType:="Time", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property EmployeeHours() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._EmployeeHours
		End Get
		Set
			If (Me._EmployeeHours.Equals(value) = false) Then
				Me.OnEmployeeHoursChanging(value)
				Me.SendPropertyChanging
				Me._EmployeeHours = value
				Me.SendPropertyChanged("EmployeeHours")
				Me.OnEmployeeHoursChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Memo", DbType:="VarChar(255)")>  _
	Public Property Memo() As String
		Get
			Return Me._Memo
		End Get
		Set
			If (String.Equals(Me._Memo, value) = false) Then
				Me.OnMemoChanging(value)
				Me.SendPropertyChanging
				Me._Memo = value
				Me.SendPropertyChanged("Memo")
				Me.OnMemoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClockStartTime", DbType:="DateTime NOT NULL")>  _
	Public Property ClockStartTime() As Date
		Get
			Return Me._ClockStartTime
		End Get
		Set
			If ((Me._ClockStartTime = value)  _
						= false) Then
				Me.OnClockStartTimeChanging(value)
				Me.SendPropertyChanging
				Me._ClockStartTime = value
				Me.SendPropertyChanged("ClockStartTime")
				Me.OnClockStartTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClockEndTime", DbType:="DateTime NOT NULL")>  _
	Public Property ClockEndTime() As Date
		Get
			Return Me._ClockEndTime
		End Get
		Set
			If ((Me._ClockEndTime = value)  _
						= false) Then
				Me.OnClockEndTimeChanging(value)
				Me.SendPropertyChanging
				Me._ClockEndTime = value
				Me.SendPropertyChanged("ClockEndTime")
				Me.OnClockEndTimeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
