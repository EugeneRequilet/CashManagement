'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="CM")>  _
Partial Public Class CashUpDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertCashUp(instance As CashUp)
    End Sub
  Partial Private Sub UpdateCashUp(instance As CashUp)
    End Sub
  Partial Private Sub DeleteCashUp(instance As CashUp)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CashManagement.My.MySettings.Default.CMConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property CashUps() As System.Data.Linq.Table(Of CashUp)
		Get
			Return Me.GetTable(Of CashUp)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CashUp")>  _
Partial Public Class CashUp
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RecordId As Integer
	
	Private _Date As Date
	
	Private _Time As Integer
	
	Private _EmployeeRecordId As Integer
	
	Private _R200 As Integer
	
	Private _R100 As Integer
	
	Private _R50 As Integer
	
	Private _R20 As Integer
	
	Private _R10 As Integer
	
	Private _R5 As Integer
	
	Private _R2 As Integer
	
	Private _R1 As Integer
	
	Private _C50 As Integer
	
	Private _C20 As Integer
	
	Private _C10 As Integer
	
	Private _CalculatedTillTotal As System.Nullable(Of Decimal)
	
	Private _FloatR200 As Integer
	
	Private _FloatR100 As Integer
	
	Private _FloatR50 As Integer
	
	Private _FloatR20 As Integer
	
	Private _FloatR10 As Integer
	
	Private _FloatR5 As Integer
	
	Private _FloatR2 As Integer
	
	Private _FloatR1 As Integer
	
	Private _FloatC50 As Integer
	
	Private _FloatC20 As Integer
	
	Private _FloatC10 As Integer
	
	Private _CalculatedFloatTotal As System.Nullable(Of Decimal)
	
	Private _DepRedByR200 As Integer
	
	Private _DepRedByR100 As Integer
	
	Private _DepRedByR50 As Integer
	
	Private _DepRedByR20 As Integer
	
	Private _DepRedByR10 As Integer
	
	Private _DepRedByR5 As Integer
	
	Private _DepRedByR2 As Integer
	
	Private _DepRedByR1 As Integer
	
	Private _DepRedByC50 As Integer
	
	Private _DepRedByC20 As Integer
	
	Private _DepRedByC10 As Integer
	
	Private _CalDepReducedByTotal As System.Nullable(Of Decimal)
	
	Private _DepIncByR200 As Integer
	
	Private _DepIncByR100 As Integer
	
	Private _DepIncByR50 As Integer
	
	Private _DepIncByR20 As Integer
	
	Private _DepIncByR10 As Integer
	
	Private _DepIncByR5 As Integer
	
	Private _DepIncByR2 As Integer
	
	Private _DepIncByR1 As Integer
	
	Private _DepIncByC50 As Integer
	
	Private _DepIncByC20 As Integer
	
	Private _DepIncByC10 As Integer
	
	Private _CalDepIncreasedByTotal As System.Nullable(Of Decimal)
	
	Private _CashDepReconciled As Boolean
	
	Private _TotalCreditCard As Decimal
	
	Private _CreditCardReconciled As Boolean
	
	Private _DepositedSkim1 As Decimal
	
	Private _Skims1Reconciled As Boolean
	
	Private _DepositedSkim2 As Decimal
	
	Private _Skims2Reconciled As Boolean
	
	Private _DepositedSkim3 As Decimal
	
	Private _Skims3Reconciled As Boolean
	
	Private _TotalDepositSkims As System.Nullable(Of Decimal)
	
	Private _Payout1 As Decimal
	
	Private _PayoutReason1 As String
	
	Private _Payout2 As Decimal
	
	Private _PayoutReason2 As String
	
	Private _Payout3 As Decimal
	
	Private _PayoutReason3 As String
	
	Private _Payout4 As Decimal
	
	Private _PayoutReason4 As String
	
	Private _Payout5 As Decimal
	
	Private _PayoutReason5 As String
	
	Private _Payout6 As Decimal
	
	Private _PayoutReason6 As String
	
	Private _TotalPayouts As System.Nullable(Of Decimal)
	
	Private _CashupVariance As Decimal
	
	Private _SalesType As Integer
	
	Private _PaymentType As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRecordIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecordIdChanged()
    End Sub
    Partial Private Sub OnDateChanging(value As Date)
    End Sub
    Partial Private Sub OnDateChanged()
    End Sub
    Partial Private Sub OnTimeChanging(value As Integer)
    End Sub
    Partial Private Sub OnTimeChanged()
    End Sub
    Partial Private Sub OnEmployeeRecordIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnEmployeeRecordIdChanged()
    End Sub
    Partial Private Sub OnR200Changing(value As Integer)
    End Sub
    Partial Private Sub OnR200Changed()
    End Sub
    Partial Private Sub OnR100Changing(value As Integer)
    End Sub
    Partial Private Sub OnR100Changed()
    End Sub
    Partial Private Sub OnR50Changing(value As Integer)
    End Sub
    Partial Private Sub OnR50Changed()
    End Sub
    Partial Private Sub OnR20Changing(value As Integer)
    End Sub
    Partial Private Sub OnR20Changed()
    End Sub
    Partial Private Sub OnR10Changing(value As Integer)
    End Sub
    Partial Private Sub OnR10Changed()
    End Sub
    Partial Private Sub OnR5Changing(value As Integer)
    End Sub
    Partial Private Sub OnR5Changed()
    End Sub
    Partial Private Sub OnR2Changing(value As Integer)
    End Sub
    Partial Private Sub OnR2Changed()
    End Sub
    Partial Private Sub OnR1Changing(value As Integer)
    End Sub
    Partial Private Sub OnR1Changed()
    End Sub
    Partial Private Sub OnC50Changing(value As Integer)
    End Sub
    Partial Private Sub OnC50Changed()
    End Sub
    Partial Private Sub OnC20Changing(value As Integer)
    End Sub
    Partial Private Sub OnC20Changed()
    End Sub
    Partial Private Sub OnC10Changing(value As Integer)
    End Sub
    Partial Private Sub OnC10Changed()
    End Sub
    Partial Private Sub OnCalculatedTillTotalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCalculatedTillTotalChanged()
    End Sub
    Partial Private Sub OnFloatR200Changing(value As Integer)
    End Sub
    Partial Private Sub OnFloatR200Changed()
    End Sub
    Partial Private Sub OnFloatR100Changing(value As Integer)
    End Sub
    Partial Private Sub OnFloatR100Changed()
    End Sub
    Partial Private Sub OnFloatR50Changing(value As Integer)
    End Sub
    Partial Private Sub OnFloatR50Changed()
    End Sub
    Partial Private Sub OnFloatR20Changing(value As Integer)
    End Sub
    Partial Private Sub OnFloatR20Changed()
    End Sub
    Partial Private Sub OnFloatR10Changing(value As Integer)
    End Sub
    Partial Private Sub OnFloatR10Changed()
    End Sub
    Partial Private Sub OnFloatR5Changing(value As Integer)
    End Sub
    Partial Private Sub OnFloatR5Changed()
    End Sub
    Partial Private Sub OnFloatR2Changing(value As Integer)
    End Sub
    Partial Private Sub OnFloatR2Changed()
    End Sub
    Partial Private Sub OnFloatR1Changing(value As Integer)
    End Sub
    Partial Private Sub OnFloatR1Changed()
    End Sub
    Partial Private Sub OnFloatC50Changing(value As Integer)
    End Sub
    Partial Private Sub OnFloatC50Changed()
    End Sub
    Partial Private Sub OnFloatC20Changing(value As Integer)
    End Sub
    Partial Private Sub OnFloatC20Changed()
    End Sub
    Partial Private Sub OnFloatC10Changing(value As Integer)
    End Sub
    Partial Private Sub OnFloatC10Changed()
    End Sub
    Partial Private Sub OnCalculatedFloatTotalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCalculatedFloatTotalChanged()
    End Sub
    Partial Private Sub OnDepRedByR200Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepRedByR200Changed()
    End Sub
    Partial Private Sub OnDepRedByR100Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepRedByR100Changed()
    End Sub
    Partial Private Sub OnDepRedByR50Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepRedByR50Changed()
    End Sub
    Partial Private Sub OnDepRedByR20Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepRedByR20Changed()
    End Sub
    Partial Private Sub OnDepRedByR10Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepRedByR10Changed()
    End Sub
    Partial Private Sub OnDepRedByR5Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepRedByR5Changed()
    End Sub
    Partial Private Sub OnDepRedByR2Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepRedByR2Changed()
    End Sub
    Partial Private Sub OnDepRedByR1Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepRedByR1Changed()
    End Sub
    Partial Private Sub OnDepRedByC50Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepRedByC50Changed()
    End Sub
    Partial Private Sub OnDepRedByC20Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepRedByC20Changed()
    End Sub
    Partial Private Sub OnDepRedByC10Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepRedByC10Changed()
    End Sub
    Partial Private Sub OnCalDepReducedByTotalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCalDepReducedByTotalChanged()
    End Sub
    Partial Private Sub OnDepIncByR200Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepIncByR200Changed()
    End Sub
    Partial Private Sub OnDepIncByR100Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepIncByR100Changed()
    End Sub
    Partial Private Sub OnDepIncByR50Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepIncByR50Changed()
    End Sub
    Partial Private Sub OnDepIncByR20Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepIncByR20Changed()
    End Sub
    Partial Private Sub OnDepIncByR10Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepIncByR10Changed()
    End Sub
    Partial Private Sub OnDepIncByR5Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepIncByR5Changed()
    End Sub
    Partial Private Sub OnDepIncByR2Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepIncByR2Changed()
    End Sub
    Partial Private Sub OnDepIncByR1Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepIncByR1Changed()
    End Sub
    Partial Private Sub OnDepIncByC50Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepIncByC50Changed()
    End Sub
    Partial Private Sub OnDepIncByC20Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepIncByC20Changed()
    End Sub
    Partial Private Sub OnDepIncByC10Changing(value As Integer)
    End Sub
    Partial Private Sub OnDepIncByC10Changed()
    End Sub
    Partial Private Sub OnCalDepIncreasedByTotalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCalDepIncreasedByTotalChanged()
    End Sub
    Partial Private Sub OnCashDepReconciledChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCashDepReconciledChanged()
    End Sub
    Partial Private Sub OnTotalCreditCardChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTotalCreditCardChanged()
    End Sub
    Partial Private Sub OnCreditCardReconciledChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCreditCardReconciledChanged()
    End Sub
    Partial Private Sub OnDepositedSkim1Changing(value As Decimal)
    End Sub
    Partial Private Sub OnDepositedSkim1Changed()
    End Sub
    Partial Private Sub OnSkims1ReconciledChanging(value As Boolean)
    End Sub
    Partial Private Sub OnSkims1ReconciledChanged()
    End Sub
    Partial Private Sub OnDepositedSkim2Changing(value As Decimal)
    End Sub
    Partial Private Sub OnDepositedSkim2Changed()
    End Sub
    Partial Private Sub OnSkims2ReconciledChanging(value As Boolean)
    End Sub
    Partial Private Sub OnSkims2ReconciledChanged()
    End Sub
    Partial Private Sub OnDepositedSkim3Changing(value As Decimal)
    End Sub
    Partial Private Sub OnDepositedSkim3Changed()
    End Sub
    Partial Private Sub OnSkims3ReconciledChanging(value As Boolean)
    End Sub
    Partial Private Sub OnSkims3ReconciledChanged()
    End Sub
    Partial Private Sub OnTotalDepositSkimsChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTotalDepositSkimsChanged()
    End Sub
    Partial Private Sub OnPayout1Changing(value As Decimal)
    End Sub
    Partial Private Sub OnPayout1Changed()
    End Sub
    Partial Private Sub OnPayoutReason1Changing(value As String)
    End Sub
    Partial Private Sub OnPayoutReason1Changed()
    End Sub
    Partial Private Sub OnPayout2Changing(value As Decimal)
    End Sub
    Partial Private Sub OnPayout2Changed()
    End Sub
    Partial Private Sub OnPayoutReason2Changing(value As String)
    End Sub
    Partial Private Sub OnPayoutReason2Changed()
    End Sub
    Partial Private Sub OnPayout3Changing(value As Decimal)
    End Sub
    Partial Private Sub OnPayout3Changed()
    End Sub
    Partial Private Sub OnPayoutReason3Changing(value As String)
    End Sub
    Partial Private Sub OnPayoutReason3Changed()
    End Sub
    Partial Private Sub OnPayout4Changing(value As Decimal)
    End Sub
    Partial Private Sub OnPayout4Changed()
    End Sub
    Partial Private Sub OnPayoutReason4Changing(value As String)
    End Sub
    Partial Private Sub OnPayoutReason4Changed()
    End Sub
    Partial Private Sub OnPayout5Changing(value As Decimal)
    End Sub
    Partial Private Sub OnPayout5Changed()
    End Sub
    Partial Private Sub OnPayoutReason5Changing(value As String)
    End Sub
    Partial Private Sub OnPayoutReason5Changed()
    End Sub
    Partial Private Sub OnPayout6Changing(value As Decimal)
    End Sub
    Partial Private Sub OnPayout6Changed()
    End Sub
    Partial Private Sub OnPayoutReason6Changing(value As String)
    End Sub
    Partial Private Sub OnPayoutReason6Changed()
    End Sub
    Partial Private Sub OnTotalPayoutsChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTotalPayoutsChanged()
    End Sub
    Partial Private Sub OnCashupVarianceChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCashupVarianceChanged()
    End Sub
    Partial Private Sub OnSalesTypeChanging(value As Integer)
    End Sub
    Partial Private Sub OnSalesTypeChanged()
    End Sub
    Partial Private Sub OnPaymentTypeChanging(value As Integer)
    End Sub
    Partial Private Sub OnPaymentTypeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecordId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RecordId() As Integer
		Get
			Return Me._RecordId
		End Get
		Set
			If ((Me._RecordId = value)  _
						= false) Then
				Me.OnRecordIdChanging(value)
				Me.SendPropertyChanging
				Me._RecordId = value
				Me.SendPropertyChanged("RecordId")
				Me.OnRecordIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Date", Storage:="_Date", DbType:="Date NOT NULL")>  _
	Public Property [Date]() As Date
		Get
			Return Me._Date
		End Get
		Set
			If ((Me._Date = value)  _
						= false) Then
				Me.OnDateChanging(value)
				Me.SendPropertyChanging
				Me._Date = value
				Me.SendPropertyChanged("[Date]")
				Me.OnDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Time", DbType:="Int NOT NULL")>  _
	Public Property Time() As Integer
		Get
			Return Me._Time
		End Get
		Set
			If ((Me._Time = value)  _
						= false) Then
				Me.OnTimeChanging(value)
				Me.SendPropertyChanging
				Me._Time = value
				Me.SendPropertyChanged("Time")
				Me.OnTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeRecordId", DbType:="Int NOT NULL")>  _
	Public Property EmployeeRecordId() As Integer
		Get
			Return Me._EmployeeRecordId
		End Get
		Set
			If ((Me._EmployeeRecordId = value)  _
						= false) Then
				Me.OnEmployeeRecordIdChanging(value)
				Me.SendPropertyChanging
				Me._EmployeeRecordId = value
				Me.SendPropertyChanged("EmployeeRecordId")
				Me.OnEmployeeRecordIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R200", DbType:="Int NOT NULL")>  _
	Public Property R200() As Integer
		Get
			Return Me._R200
		End Get
		Set
			If ((Me._R200 = value)  _
						= false) Then
				Me.OnR200Changing(value)
				Me.SendPropertyChanging
				Me._R200 = value
				Me.SendPropertyChanged("R200")
				Me.OnR200Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R100", DbType:="Int NOT NULL")>  _
	Public Property R100() As Integer
		Get
			Return Me._R100
		End Get
		Set
			If ((Me._R100 = value)  _
						= false) Then
				Me.OnR100Changing(value)
				Me.SendPropertyChanging
				Me._R100 = value
				Me.SendPropertyChanged("R100")
				Me.OnR100Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R50", DbType:="Int NOT NULL")>  _
	Public Property R50() As Integer
		Get
			Return Me._R50
		End Get
		Set
			If ((Me._R50 = value)  _
						= false) Then
				Me.OnR50Changing(value)
				Me.SendPropertyChanging
				Me._R50 = value
				Me.SendPropertyChanged("R50")
				Me.OnR50Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R20", DbType:="Int NOT NULL")>  _
	Public Property R20() As Integer
		Get
			Return Me._R20
		End Get
		Set
			If ((Me._R20 = value)  _
						= false) Then
				Me.OnR20Changing(value)
				Me.SendPropertyChanging
				Me._R20 = value
				Me.SendPropertyChanged("R20")
				Me.OnR20Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R10", DbType:="Int NOT NULL")>  _
	Public Property R10() As Integer
		Get
			Return Me._R10
		End Get
		Set
			If ((Me._R10 = value)  _
						= false) Then
				Me.OnR10Changing(value)
				Me.SendPropertyChanging
				Me._R10 = value
				Me.SendPropertyChanged("R10")
				Me.OnR10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R5", DbType:="Int NOT NULL")>  _
	Public Property R5() As Integer
		Get
			Return Me._R5
		End Get
		Set
			If ((Me._R5 = value)  _
						= false) Then
				Me.OnR5Changing(value)
				Me.SendPropertyChanging
				Me._R5 = value
				Me.SendPropertyChanged("R5")
				Me.OnR5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R2", DbType:="Int NOT NULL")>  _
	Public Property R2() As Integer
		Get
			Return Me._R2
		End Get
		Set
			If ((Me._R2 = value)  _
						= false) Then
				Me.OnR2Changing(value)
				Me.SendPropertyChanging
				Me._R2 = value
				Me.SendPropertyChanged("R2")
				Me.OnR2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R1", DbType:="Int NOT NULL")>  _
	Public Property R1() As Integer
		Get
			Return Me._R1
		End Get
		Set
			If ((Me._R1 = value)  _
						= false) Then
				Me.OnR1Changing(value)
				Me.SendPropertyChanging
				Me._R1 = value
				Me.SendPropertyChanged("R1")
				Me.OnR1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C50", DbType:="Int NOT NULL")>  _
	Public Property C50() As Integer
		Get
			Return Me._C50
		End Get
		Set
			If ((Me._C50 = value)  _
						= false) Then
				Me.OnC50Changing(value)
				Me.SendPropertyChanging
				Me._C50 = value
				Me.SendPropertyChanged("C50")
				Me.OnC50Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C20", DbType:="Int NOT NULL")>  _
	Public Property C20() As Integer
		Get
			Return Me._C20
		End Get
		Set
			If ((Me._C20 = value)  _
						= false) Then
				Me.OnC20Changing(value)
				Me.SendPropertyChanging
				Me._C20 = value
				Me.SendPropertyChanged("C20")
				Me.OnC20Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C10", DbType:="Int NOT NULL")>  _
	Public Property C10() As Integer
		Get
			Return Me._C10
		End Get
		Set
			If ((Me._C10 = value)  _
						= false) Then
				Me.OnC10Changing(value)
				Me.SendPropertyChanging
				Me._C10 = value
				Me.SendPropertyChanged("C10")
				Me.OnC10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CalculatedTillTotal", AutoSync:=AutoSync.Always, DbType:="Decimal(13,2)", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CalculatedTillTotal() As System.Nullable(Of Decimal)
		Get
			Return Me._CalculatedTillTotal
		End Get
		Set
			If (Me._CalculatedTillTotal.Equals(value) = false) Then
				Me.OnCalculatedTillTotalChanging(value)
				Me.SendPropertyChanging
				Me._CalculatedTillTotal = value
				Me.SendPropertyChanged("CalculatedTillTotal")
				Me.OnCalculatedTillTotalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FloatR200", DbType:="Int NOT NULL")>  _
	Public Property FloatR200() As Integer
		Get
			Return Me._FloatR200
		End Get
		Set
			If ((Me._FloatR200 = value)  _
						= false) Then
				Me.OnFloatR200Changing(value)
				Me.SendPropertyChanging
				Me._FloatR200 = value
				Me.SendPropertyChanged("FloatR200")
				Me.OnFloatR200Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FloatR100", DbType:="Int NOT NULL")>  _
	Public Property FloatR100() As Integer
		Get
			Return Me._FloatR100
		End Get
		Set
			If ((Me._FloatR100 = value)  _
						= false) Then
				Me.OnFloatR100Changing(value)
				Me.SendPropertyChanging
				Me._FloatR100 = value
				Me.SendPropertyChanged("FloatR100")
				Me.OnFloatR100Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FloatR50", DbType:="Int NOT NULL")>  _
	Public Property FloatR50() As Integer
		Get
			Return Me._FloatR50
		End Get
		Set
			If ((Me._FloatR50 = value)  _
						= false) Then
				Me.OnFloatR50Changing(value)
				Me.SendPropertyChanging
				Me._FloatR50 = value
				Me.SendPropertyChanged("FloatR50")
				Me.OnFloatR50Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FloatR20", DbType:="Int NOT NULL")>  _
	Public Property FloatR20() As Integer
		Get
			Return Me._FloatR20
		End Get
		Set
			If ((Me._FloatR20 = value)  _
						= false) Then
				Me.OnFloatR20Changing(value)
				Me.SendPropertyChanging
				Me._FloatR20 = value
				Me.SendPropertyChanged("FloatR20")
				Me.OnFloatR20Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FloatR10", DbType:="Int NOT NULL")>  _
	Public Property FloatR10() As Integer
		Get
			Return Me._FloatR10
		End Get
		Set
			If ((Me._FloatR10 = value)  _
						= false) Then
				Me.OnFloatR10Changing(value)
				Me.SendPropertyChanging
				Me._FloatR10 = value
				Me.SendPropertyChanged("FloatR10")
				Me.OnFloatR10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FloatR5", DbType:="Int NOT NULL")>  _
	Public Property FloatR5() As Integer
		Get
			Return Me._FloatR5
		End Get
		Set
			If ((Me._FloatR5 = value)  _
						= false) Then
				Me.OnFloatR5Changing(value)
				Me.SendPropertyChanging
				Me._FloatR5 = value
				Me.SendPropertyChanged("FloatR5")
				Me.OnFloatR5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FloatR2", DbType:="Int NOT NULL")>  _
	Public Property FloatR2() As Integer
		Get
			Return Me._FloatR2
		End Get
		Set
			If ((Me._FloatR2 = value)  _
						= false) Then
				Me.OnFloatR2Changing(value)
				Me.SendPropertyChanging
				Me._FloatR2 = value
				Me.SendPropertyChanged("FloatR2")
				Me.OnFloatR2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FloatR1", DbType:="Int NOT NULL")>  _
	Public Property FloatR1() As Integer
		Get
			Return Me._FloatR1
		End Get
		Set
			If ((Me._FloatR1 = value)  _
						= false) Then
				Me.OnFloatR1Changing(value)
				Me.SendPropertyChanging
				Me._FloatR1 = value
				Me.SendPropertyChanged("FloatR1")
				Me.OnFloatR1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FloatC50", DbType:="Int NOT NULL")>  _
	Public Property FloatC50() As Integer
		Get
			Return Me._FloatC50
		End Get
		Set
			If ((Me._FloatC50 = value)  _
						= false) Then
				Me.OnFloatC50Changing(value)
				Me.SendPropertyChanging
				Me._FloatC50 = value
				Me.SendPropertyChanged("FloatC50")
				Me.OnFloatC50Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FloatC20", DbType:="Int NOT NULL")>  _
	Public Property FloatC20() As Integer
		Get
			Return Me._FloatC20
		End Get
		Set
			If ((Me._FloatC20 = value)  _
						= false) Then
				Me.OnFloatC20Changing(value)
				Me.SendPropertyChanging
				Me._FloatC20 = value
				Me.SendPropertyChanged("FloatC20")
				Me.OnFloatC20Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FloatC10", DbType:="Int NOT NULL")>  _
	Public Property FloatC10() As Integer
		Get
			Return Me._FloatC10
		End Get
		Set
			If ((Me._FloatC10 = value)  _
						= false) Then
				Me.OnFloatC10Changing(value)
				Me.SendPropertyChanging
				Me._FloatC10 = value
				Me.SendPropertyChanged("FloatC10")
				Me.OnFloatC10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CalculatedFloatTotal", AutoSync:=AutoSync.Always, DbType:="Decimal(13,2)", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CalculatedFloatTotal() As System.Nullable(Of Decimal)
		Get
			Return Me._CalculatedFloatTotal
		End Get
		Set
			If (Me._CalculatedFloatTotal.Equals(value) = false) Then
				Me.OnCalculatedFloatTotalChanging(value)
				Me.SendPropertyChanging
				Me._CalculatedFloatTotal = value
				Me.SendPropertyChanged("CalculatedFloatTotal")
				Me.OnCalculatedFloatTotalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepRedByR200", DbType:="Int NOT NULL")>  _
	Public Property DepRedByR200() As Integer
		Get
			Return Me._DepRedByR200
		End Get
		Set
			If ((Me._DepRedByR200 = value)  _
						= false) Then
				Me.OnDepRedByR200Changing(value)
				Me.SendPropertyChanging
				Me._DepRedByR200 = value
				Me.SendPropertyChanged("DepRedByR200")
				Me.OnDepRedByR200Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepRedByR100", DbType:="Int NOT NULL")>  _
	Public Property DepRedByR100() As Integer
		Get
			Return Me._DepRedByR100
		End Get
		Set
			If ((Me._DepRedByR100 = value)  _
						= false) Then
				Me.OnDepRedByR100Changing(value)
				Me.SendPropertyChanging
				Me._DepRedByR100 = value
				Me.SendPropertyChanged("DepRedByR100")
				Me.OnDepRedByR100Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepRedByR50", DbType:="Int NOT NULL")>  _
	Public Property DepRedByR50() As Integer
		Get
			Return Me._DepRedByR50
		End Get
		Set
			If ((Me._DepRedByR50 = value)  _
						= false) Then
				Me.OnDepRedByR50Changing(value)
				Me.SendPropertyChanging
				Me._DepRedByR50 = value
				Me.SendPropertyChanged("DepRedByR50")
				Me.OnDepRedByR50Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepRedByR20", DbType:="Int NOT NULL")>  _
	Public Property DepRedByR20() As Integer
		Get
			Return Me._DepRedByR20
		End Get
		Set
			If ((Me._DepRedByR20 = value)  _
						= false) Then
				Me.OnDepRedByR20Changing(value)
				Me.SendPropertyChanging
				Me._DepRedByR20 = value
				Me.SendPropertyChanged("DepRedByR20")
				Me.OnDepRedByR20Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepRedByR10", DbType:="Int NOT NULL")>  _
	Public Property DepRedByR10() As Integer
		Get
			Return Me._DepRedByR10
		End Get
		Set
			If ((Me._DepRedByR10 = value)  _
						= false) Then
				Me.OnDepRedByR10Changing(value)
				Me.SendPropertyChanging
				Me._DepRedByR10 = value
				Me.SendPropertyChanged("DepRedByR10")
				Me.OnDepRedByR10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepRedByR5", DbType:="Int NOT NULL")>  _
	Public Property DepRedByR5() As Integer
		Get
			Return Me._DepRedByR5
		End Get
		Set
			If ((Me._DepRedByR5 = value)  _
						= false) Then
				Me.OnDepRedByR5Changing(value)
				Me.SendPropertyChanging
				Me._DepRedByR5 = value
				Me.SendPropertyChanged("DepRedByR5")
				Me.OnDepRedByR5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepRedByR2", DbType:="Int NOT NULL")>  _
	Public Property DepRedByR2() As Integer
		Get
			Return Me._DepRedByR2
		End Get
		Set
			If ((Me._DepRedByR2 = value)  _
						= false) Then
				Me.OnDepRedByR2Changing(value)
				Me.SendPropertyChanging
				Me._DepRedByR2 = value
				Me.SendPropertyChanged("DepRedByR2")
				Me.OnDepRedByR2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepRedByR1", DbType:="Int NOT NULL")>  _
	Public Property DepRedByR1() As Integer
		Get
			Return Me._DepRedByR1
		End Get
		Set
			If ((Me._DepRedByR1 = value)  _
						= false) Then
				Me.OnDepRedByR1Changing(value)
				Me.SendPropertyChanging
				Me._DepRedByR1 = value
				Me.SendPropertyChanged("DepRedByR1")
				Me.OnDepRedByR1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepRedByC50", DbType:="Int NOT NULL")>  _
	Public Property DepRedByC50() As Integer
		Get
			Return Me._DepRedByC50
		End Get
		Set
			If ((Me._DepRedByC50 = value)  _
						= false) Then
				Me.OnDepRedByC50Changing(value)
				Me.SendPropertyChanging
				Me._DepRedByC50 = value
				Me.SendPropertyChanged("DepRedByC50")
				Me.OnDepRedByC50Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepRedByC20", DbType:="Int NOT NULL")>  _
	Public Property DepRedByC20() As Integer
		Get
			Return Me._DepRedByC20
		End Get
		Set
			If ((Me._DepRedByC20 = value)  _
						= false) Then
				Me.OnDepRedByC20Changing(value)
				Me.SendPropertyChanging
				Me._DepRedByC20 = value
				Me.SendPropertyChanged("DepRedByC20")
				Me.OnDepRedByC20Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepRedByC10", DbType:="Int NOT NULL")>  _
	Public Property DepRedByC10() As Integer
		Get
			Return Me._DepRedByC10
		End Get
		Set
			If ((Me._DepRedByC10 = value)  _
						= false) Then
				Me.OnDepRedByC10Changing(value)
				Me.SendPropertyChanging
				Me._DepRedByC10 = value
				Me.SendPropertyChanged("DepRedByC10")
				Me.OnDepRedByC10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CalDepReducedByTotal", AutoSync:=AutoSync.Always, DbType:="Decimal(13,2)", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CalDepReducedByTotal() As System.Nullable(Of Decimal)
		Get
			Return Me._CalDepReducedByTotal
		End Get
		Set
			If (Me._CalDepReducedByTotal.Equals(value) = false) Then
				Me.OnCalDepReducedByTotalChanging(value)
				Me.SendPropertyChanging
				Me._CalDepReducedByTotal = value
				Me.SendPropertyChanged("CalDepReducedByTotal")
				Me.OnCalDepReducedByTotalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepIncByR200", DbType:="Int NOT NULL")>  _
	Public Property DepIncByR200() As Integer
		Get
			Return Me._DepIncByR200
		End Get
		Set
			If ((Me._DepIncByR200 = value)  _
						= false) Then
				Me.OnDepIncByR200Changing(value)
				Me.SendPropertyChanging
				Me._DepIncByR200 = value
				Me.SendPropertyChanged("DepIncByR200")
				Me.OnDepIncByR200Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepIncByR100", DbType:="Int NOT NULL")>  _
	Public Property DepIncByR100() As Integer
		Get
			Return Me._DepIncByR100
		End Get
		Set
			If ((Me._DepIncByR100 = value)  _
						= false) Then
				Me.OnDepIncByR100Changing(value)
				Me.SendPropertyChanging
				Me._DepIncByR100 = value
				Me.SendPropertyChanged("DepIncByR100")
				Me.OnDepIncByR100Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepIncByR50", DbType:="Int NOT NULL")>  _
	Public Property DepIncByR50() As Integer
		Get
			Return Me._DepIncByR50
		End Get
		Set
			If ((Me._DepIncByR50 = value)  _
						= false) Then
				Me.OnDepIncByR50Changing(value)
				Me.SendPropertyChanging
				Me._DepIncByR50 = value
				Me.SendPropertyChanged("DepIncByR50")
				Me.OnDepIncByR50Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepIncByR20", DbType:="Int NOT NULL")>  _
	Public Property DepIncByR20() As Integer
		Get
			Return Me._DepIncByR20
		End Get
		Set
			If ((Me._DepIncByR20 = value)  _
						= false) Then
				Me.OnDepIncByR20Changing(value)
				Me.SendPropertyChanging
				Me._DepIncByR20 = value
				Me.SendPropertyChanged("DepIncByR20")
				Me.OnDepIncByR20Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepIncByR10", DbType:="Int NOT NULL")>  _
	Public Property DepIncByR10() As Integer
		Get
			Return Me._DepIncByR10
		End Get
		Set
			If ((Me._DepIncByR10 = value)  _
						= false) Then
				Me.OnDepIncByR10Changing(value)
				Me.SendPropertyChanging
				Me._DepIncByR10 = value
				Me.SendPropertyChanged("DepIncByR10")
				Me.OnDepIncByR10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepIncByR5", DbType:="Int NOT NULL")>  _
	Public Property DepIncByR5() As Integer
		Get
			Return Me._DepIncByR5
		End Get
		Set
			If ((Me._DepIncByR5 = value)  _
						= false) Then
				Me.OnDepIncByR5Changing(value)
				Me.SendPropertyChanging
				Me._DepIncByR5 = value
				Me.SendPropertyChanged("DepIncByR5")
				Me.OnDepIncByR5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepIncByR2", DbType:="Int NOT NULL")>  _
	Public Property DepIncByR2() As Integer
		Get
			Return Me._DepIncByR2
		End Get
		Set
			If ((Me._DepIncByR2 = value)  _
						= false) Then
				Me.OnDepIncByR2Changing(value)
				Me.SendPropertyChanging
				Me._DepIncByR2 = value
				Me.SendPropertyChanged("DepIncByR2")
				Me.OnDepIncByR2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepIncByR1", DbType:="Int NOT NULL")>  _
	Public Property DepIncByR1() As Integer
		Get
			Return Me._DepIncByR1
		End Get
		Set
			If ((Me._DepIncByR1 = value)  _
						= false) Then
				Me.OnDepIncByR1Changing(value)
				Me.SendPropertyChanging
				Me._DepIncByR1 = value
				Me.SendPropertyChanged("DepIncByR1")
				Me.OnDepIncByR1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepIncByC50", DbType:="Int NOT NULL")>  _
	Public Property DepIncByC50() As Integer
		Get
			Return Me._DepIncByC50
		End Get
		Set
			If ((Me._DepIncByC50 = value)  _
						= false) Then
				Me.OnDepIncByC50Changing(value)
				Me.SendPropertyChanging
				Me._DepIncByC50 = value
				Me.SendPropertyChanged("DepIncByC50")
				Me.OnDepIncByC50Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepIncByC20", DbType:="Int NOT NULL")>  _
	Public Property DepIncByC20() As Integer
		Get
			Return Me._DepIncByC20
		End Get
		Set
			If ((Me._DepIncByC20 = value)  _
						= false) Then
				Me.OnDepIncByC20Changing(value)
				Me.SendPropertyChanging
				Me._DepIncByC20 = value
				Me.SendPropertyChanged("DepIncByC20")
				Me.OnDepIncByC20Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepIncByC10", DbType:="Int NOT NULL")>  _
	Public Property DepIncByC10() As Integer
		Get
			Return Me._DepIncByC10
		End Get
		Set
			If ((Me._DepIncByC10 = value)  _
						= false) Then
				Me.OnDepIncByC10Changing(value)
				Me.SendPropertyChanging
				Me._DepIncByC10 = value
				Me.SendPropertyChanged("DepIncByC10")
				Me.OnDepIncByC10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CalDepIncreasedByTotal", AutoSync:=AutoSync.Always, DbType:="Decimal(13,2)", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CalDepIncreasedByTotal() As System.Nullable(Of Decimal)
		Get
			Return Me._CalDepIncreasedByTotal
		End Get
		Set
			If (Me._CalDepIncreasedByTotal.Equals(value) = false) Then
				Me.OnCalDepIncreasedByTotalChanging(value)
				Me.SendPropertyChanging
				Me._CalDepIncreasedByTotal = value
				Me.SendPropertyChanged("CalDepIncreasedByTotal")
				Me.OnCalDepIncreasedByTotalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CashDepReconciled", DbType:="Bit NOT NULL")>  _
	Public Property CashDepReconciled() As Boolean
		Get
			Return Me._CashDepReconciled
		End Get
		Set
			If ((Me._CashDepReconciled = value)  _
						= false) Then
				Me.OnCashDepReconciledChanging(value)
				Me.SendPropertyChanging
				Me._CashDepReconciled = value
				Me.SendPropertyChanged("CashDepReconciled")
				Me.OnCashDepReconciledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalCreditCard", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property TotalCreditCard() As Decimal
		Get
			Return Me._TotalCreditCard
		End Get
		Set
			If ((Me._TotalCreditCard = value)  _
						= false) Then
				Me.OnTotalCreditCardChanging(value)
				Me.SendPropertyChanging
				Me._TotalCreditCard = value
				Me.SendPropertyChanged("TotalCreditCard")
				Me.OnTotalCreditCardChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreditCardReconciled", DbType:="Bit NOT NULL")>  _
	Public Property CreditCardReconciled() As Boolean
		Get
			Return Me._CreditCardReconciled
		End Get
		Set
			If ((Me._CreditCardReconciled = value)  _
						= false) Then
				Me.OnCreditCardReconciledChanging(value)
				Me.SendPropertyChanging
				Me._CreditCardReconciled = value
				Me.SendPropertyChanged("CreditCardReconciled")
				Me.OnCreditCardReconciledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepositedSkim1", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property DepositedSkim1() As Decimal
		Get
			Return Me._DepositedSkim1
		End Get
		Set
			If ((Me._DepositedSkim1 = value)  _
						= false) Then
				Me.OnDepositedSkim1Changing(value)
				Me.SendPropertyChanging
				Me._DepositedSkim1 = value
				Me.SendPropertyChanged("DepositedSkim1")
				Me.OnDepositedSkim1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Skims1Reconciled", DbType:="Bit NOT NULL")>  _
	Public Property Skims1Reconciled() As Boolean
		Get
			Return Me._Skims1Reconciled
		End Get
		Set
			If ((Me._Skims1Reconciled = value)  _
						= false) Then
				Me.OnSkims1ReconciledChanging(value)
				Me.SendPropertyChanging
				Me._Skims1Reconciled = value
				Me.SendPropertyChanged("Skims1Reconciled")
				Me.OnSkims1ReconciledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepositedSkim2", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property DepositedSkim2() As Decimal
		Get
			Return Me._DepositedSkim2
		End Get
		Set
			If ((Me._DepositedSkim2 = value)  _
						= false) Then
				Me.OnDepositedSkim2Changing(value)
				Me.SendPropertyChanging
				Me._DepositedSkim2 = value
				Me.SendPropertyChanged("DepositedSkim2")
				Me.OnDepositedSkim2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Skims2Reconciled", DbType:="Bit NOT NULL")>  _
	Public Property Skims2Reconciled() As Boolean
		Get
			Return Me._Skims2Reconciled
		End Get
		Set
			If ((Me._Skims2Reconciled = value)  _
						= false) Then
				Me.OnSkims2ReconciledChanging(value)
				Me.SendPropertyChanging
				Me._Skims2Reconciled = value
				Me.SendPropertyChanged("Skims2Reconciled")
				Me.OnSkims2ReconciledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepositedSkim3", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property DepositedSkim3() As Decimal
		Get
			Return Me._DepositedSkim3
		End Get
		Set
			If ((Me._DepositedSkim3 = value)  _
						= false) Then
				Me.OnDepositedSkim3Changing(value)
				Me.SendPropertyChanging
				Me._DepositedSkim3 = value
				Me.SendPropertyChanged("DepositedSkim3")
				Me.OnDepositedSkim3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Skims3Reconciled", DbType:="Bit NOT NULL")>  _
	Public Property Skims3Reconciled() As Boolean
		Get
			Return Me._Skims3Reconciled
		End Get
		Set
			If ((Me._Skims3Reconciled = value)  _
						= false) Then
				Me.OnSkims3ReconciledChanging(value)
				Me.SendPropertyChanging
				Me._Skims3Reconciled = value
				Me.SendPropertyChanged("Skims3Reconciled")
				Me.OnSkims3ReconciledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalDepositSkims", AutoSync:=AutoSync.Always, DbType:="Decimal(13,2)", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TotalDepositSkims() As System.Nullable(Of Decimal)
		Get
			Return Me._TotalDepositSkims
		End Get
		Set
			If (Me._TotalDepositSkims.Equals(value) = false) Then
				Me.OnTotalDepositSkimsChanging(value)
				Me.SendPropertyChanging
				Me._TotalDepositSkims = value
				Me.SendPropertyChanged("TotalDepositSkims")
				Me.OnTotalDepositSkimsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Payout1", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property Payout1() As Decimal
		Get
			Return Me._Payout1
		End Get
		Set
			If ((Me._Payout1 = value)  _
						= false) Then
				Me.OnPayout1Changing(value)
				Me.SendPropertyChanging
				Me._Payout1 = value
				Me.SendPropertyChanged("Payout1")
				Me.OnPayout1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayoutReason1", DbType:="VarChar(30)")>  _
	Public Property PayoutReason1() As String
		Get
			Return Me._PayoutReason1
		End Get
		Set
			If (String.Equals(Me._PayoutReason1, value) = false) Then
				Me.OnPayoutReason1Changing(value)
				Me.SendPropertyChanging
				Me._PayoutReason1 = value
				Me.SendPropertyChanged("PayoutReason1")
				Me.OnPayoutReason1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Payout2", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property Payout2() As Decimal
		Get
			Return Me._Payout2
		End Get
		Set
			If ((Me._Payout2 = value)  _
						= false) Then
				Me.OnPayout2Changing(value)
				Me.SendPropertyChanging
				Me._Payout2 = value
				Me.SendPropertyChanged("Payout2")
				Me.OnPayout2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayoutReason2", DbType:="VarChar(30)")>  _
	Public Property PayoutReason2() As String
		Get
			Return Me._PayoutReason2
		End Get
		Set
			If (String.Equals(Me._PayoutReason2, value) = false) Then
				Me.OnPayoutReason2Changing(value)
				Me.SendPropertyChanging
				Me._PayoutReason2 = value
				Me.SendPropertyChanged("PayoutReason2")
				Me.OnPayoutReason2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Payout3", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property Payout3() As Decimal
		Get
			Return Me._Payout3
		End Get
		Set
			If ((Me._Payout3 = value)  _
						= false) Then
				Me.OnPayout3Changing(value)
				Me.SendPropertyChanging
				Me._Payout3 = value
				Me.SendPropertyChanged("Payout3")
				Me.OnPayout3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayoutReason3", DbType:="VarChar(30)")>  _
	Public Property PayoutReason3() As String
		Get
			Return Me._PayoutReason3
		End Get
		Set
			If (String.Equals(Me._PayoutReason3, value) = false) Then
				Me.OnPayoutReason3Changing(value)
				Me.SendPropertyChanging
				Me._PayoutReason3 = value
				Me.SendPropertyChanged("PayoutReason3")
				Me.OnPayoutReason3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Payout4", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property Payout4() As Decimal
		Get
			Return Me._Payout4
		End Get
		Set
			If ((Me._Payout4 = value)  _
						= false) Then
				Me.OnPayout4Changing(value)
				Me.SendPropertyChanging
				Me._Payout4 = value
				Me.SendPropertyChanged("Payout4")
				Me.OnPayout4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayoutReason4", DbType:="VarChar(30)")>  _
	Public Property PayoutReason4() As String
		Get
			Return Me._PayoutReason4
		End Get
		Set
			If (String.Equals(Me._PayoutReason4, value) = false) Then
				Me.OnPayoutReason4Changing(value)
				Me.SendPropertyChanging
				Me._PayoutReason4 = value
				Me.SendPropertyChanged("PayoutReason4")
				Me.OnPayoutReason4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Payout5", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property Payout5() As Decimal
		Get
			Return Me._Payout5
		End Get
		Set
			If ((Me._Payout5 = value)  _
						= false) Then
				Me.OnPayout5Changing(value)
				Me.SendPropertyChanging
				Me._Payout5 = value
				Me.SendPropertyChanged("Payout5")
				Me.OnPayout5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayoutReason5", DbType:="VarChar(30)")>  _
	Public Property PayoutReason5() As String
		Get
			Return Me._PayoutReason5
		End Get
		Set
			If (String.Equals(Me._PayoutReason5, value) = false) Then
				Me.OnPayoutReason5Changing(value)
				Me.SendPropertyChanging
				Me._PayoutReason5 = value
				Me.SendPropertyChanged("PayoutReason5")
				Me.OnPayoutReason5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Payout6", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property Payout6() As Decimal
		Get
			Return Me._Payout6
		End Get
		Set
			If ((Me._Payout6 = value)  _
						= false) Then
				Me.OnPayout6Changing(value)
				Me.SendPropertyChanging
				Me._Payout6 = value
				Me.SendPropertyChanged("Payout6")
				Me.OnPayout6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayoutReason6", DbType:="VarChar(30)")>  _
	Public Property PayoutReason6() As String
		Get
			Return Me._PayoutReason6
		End Get
		Set
			If (String.Equals(Me._PayoutReason6, value) = false) Then
				Me.OnPayoutReason6Changing(value)
				Me.SendPropertyChanging
				Me._PayoutReason6 = value
				Me.SendPropertyChanged("PayoutReason6")
				Me.OnPayoutReason6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalPayouts", AutoSync:=AutoSync.Always, DbType:="Decimal(13,2)", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TotalPayouts() As System.Nullable(Of Decimal)
		Get
			Return Me._TotalPayouts
		End Get
		Set
			If (Me._TotalPayouts.Equals(value) = false) Then
				Me.OnTotalPayoutsChanging(value)
				Me.SendPropertyChanging
				Me._TotalPayouts = value
				Me.SendPropertyChanged("TotalPayouts")
				Me.OnTotalPayoutsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CashupVariance", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property CashupVariance() As Decimal
		Get
			Return Me._CashupVariance
		End Get
		Set
			If ((Me._CashupVariance = value)  _
						= false) Then
				Me.OnCashupVarianceChanging(value)
				Me.SendPropertyChanging
				Me._CashupVariance = value
				Me.SendPropertyChanged("CashupVariance")
				Me.OnCashupVarianceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SalesType", DbType:="Int NOT NULL")>  _
	Public Property SalesType() As Integer
		Get
			Return Me._SalesType
		End Get
		Set
			If ((Me._SalesType = value)  _
						= false) Then
				Me.OnSalesTypeChanging(value)
				Me.SendPropertyChanging
				Me._SalesType = value
				Me.SendPropertyChanged("SalesType")
				Me.OnSalesTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentType", DbType:="Int NOT NULL")>  _
	Public Property PaymentType() As Integer
		Get
			Return Me._PaymentType
		End Get
		Set
			If ((Me._PaymentType = value)  _
						= false) Then
				Me.OnPaymentTypeChanging(value)
				Me.SendPropertyChanging
				Me._PaymentType = value
				Me.SendPropertyChanged("PaymentType")
				Me.OnPaymentTypeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
