'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="CM")>  _
Partial Public Class LeaveTakenDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertLeaveTaken(instance As LeaveTaken)
    End Sub
  Partial Private Sub UpdateLeaveTaken(instance As LeaveTaken)
    End Sub
  Partial Private Sub DeleteLeaveTaken(instance As LeaveTaken)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CashManagement.My.MySettings.Default.CMConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property LeaveTakens() As System.Data.Linq.Table(Of LeaveTaken)
		Get
			Return Me.GetTable(Of LeaveTaken)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LeaveTaken")>  _
Partial Public Class LeaveTaken
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RecordId As Integer
	
	Private _StartDate As Date
	
	Private _EndDate As Date
	
	Private _Days As System.Nullable(Of Integer)
	
	Private _LeaveType As String
	
	Private _LeaveTakenEmployeeRecordId As Integer
	
	Private _EmployeeRecordId As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRecordIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecordIdChanged()
    End Sub
    Partial Private Sub OnStartDateChanging(value As Date)
    End Sub
    Partial Private Sub OnStartDateChanged()
    End Sub
    Partial Private Sub OnEndDateChanging(value As Date)
    End Sub
    Partial Private Sub OnEndDateChanged()
    End Sub
    Partial Private Sub OnDaysChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDaysChanged()
    End Sub
    Partial Private Sub OnLeaveTypeChanging(value As String)
    End Sub
    Partial Private Sub OnLeaveTypeChanged()
    End Sub
    Partial Private Sub OnLeaveTakenEmployeeRecordIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnLeaveTakenEmployeeRecordIdChanged()
    End Sub
    Partial Private Sub OnEmployeeRecordIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnEmployeeRecordIdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecordId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RecordId() As Integer
		Get
			Return Me._RecordId
		End Get
		Set
			If ((Me._RecordId = value)  _
						= false) Then
				Me.OnRecordIdChanging(value)
				Me.SendPropertyChanging
				Me._RecordId = value
				Me.SendPropertyChanged("RecordId")
				Me.OnRecordIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="Date NOT NULL")>  _
	Public Property StartDate() As Date
		Get
			Return Me._StartDate
		End Get
		Set
			If ((Me._StartDate = value)  _
						= false) Then
				Me.OnStartDateChanging(value)
				Me.SendPropertyChanging
				Me._StartDate = value
				Me.SendPropertyChanged("StartDate")
				Me.OnStartDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="Date NOT NULL")>  _
	Public Property EndDate() As Date
		Get
			Return Me._EndDate
		End Get
		Set
			If ((Me._EndDate = value)  _
						= false) Then
				Me.OnEndDateChanging(value)
				Me.SendPropertyChanging
				Me._EndDate = value
				Me.SendPropertyChanged("EndDate")
				Me.OnEndDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Days", AutoSync:=AutoSync.Always, DbType:="Int", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Days() As System.Nullable(Of Integer)
		Get
			Return Me._Days
		End Get
		Set
			If (Me._Days.Equals(value) = false) Then
				Me.OnDaysChanging(value)
				Me.SendPropertyChanging
				Me._Days = value
				Me.SendPropertyChanged("Days")
				Me.OnDaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeaveType", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property LeaveType() As String
		Get
			Return Me._LeaveType
		End Get
		Set
			If (String.Equals(Me._LeaveType, value) = false) Then
				Me.OnLeaveTypeChanging(value)
				Me.SendPropertyChanging
				Me._LeaveType = value
				Me.SendPropertyChanged("LeaveType")
				Me.OnLeaveTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeaveTakenEmployeeRecordId", DbType:="Int NOT NULL")>  _
	Public Property LeaveTakenEmployeeRecordId() As Integer
		Get
			Return Me._LeaveTakenEmployeeRecordId
		End Get
		Set
			If ((Me._LeaveTakenEmployeeRecordId = value)  _
						= false) Then
				Me.OnLeaveTakenEmployeeRecordIdChanging(value)
				Me.SendPropertyChanging
				Me._LeaveTakenEmployeeRecordId = value
				Me.SendPropertyChanged("LeaveTakenEmployeeRecordId")
				Me.OnLeaveTakenEmployeeRecordIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeRecordId", DbType:="Int NOT NULL")>  _
	Public Property EmployeeRecordId() As Integer
		Get
			Return Me._EmployeeRecordId
		End Get
		Set
			If ((Me._EmployeeRecordId = value)  _
						= false) Then
				Me.OnEmployeeRecordIdChanging(value)
				Me.SendPropertyChanging
				Me._EmployeeRecordId = value
				Me.SendPropertyChanged("EmployeeRecordId")
				Me.OnEmployeeRecordIdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
