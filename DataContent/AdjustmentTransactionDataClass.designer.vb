'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="CM")>  _
Partial Public Class AdjustmentTransactionDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertAdjustmentTransaction(instance As AdjustmentTransaction)
    End Sub
  Partial Private Sub UpdateAdjustmentTransaction(instance As AdjustmentTransaction)
    End Sub
  Partial Private Sub DeleteAdjustmentTransaction(instance As AdjustmentTransaction)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CashManagement.My.MySettings.Default.CMConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property AdjustmentTransactions() As System.Data.Linq.Table(Of AdjustmentTransaction)
		Get
			Return Me.GetTable(Of AdjustmentTransaction)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AdjustmentTransaction")>  _
Partial Public Class AdjustmentTransaction
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RecordId As Integer
	
	Private _InventoryDescription As String
	
	Private _Quantity As Decimal
	
	Private _CostPrice As Decimal
	
	Private _CalcAmount As System.Nullable(Of Decimal)
	
	Private _Memo As String
	
	Private _EmployeeRecordId As Integer
	
	Private _AdjustmentRequestedRecordId As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRecordIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecordIdChanged()
    End Sub
    Partial Private Sub OnInventoryDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnInventoryDescriptionChanged()
    End Sub
    Partial Private Sub OnQuantityChanging(value As Decimal)
    End Sub
    Partial Private Sub OnQuantityChanged()
    End Sub
    Partial Private Sub OnCostPriceChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCostPriceChanged()
    End Sub
    Partial Private Sub OnCalcAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCalcAmountChanged()
    End Sub
    Partial Private Sub OnMemoChanging(value As String)
    End Sub
    Partial Private Sub OnMemoChanged()
    End Sub
    Partial Private Sub OnEmployeeRecordIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnEmployeeRecordIdChanged()
    End Sub
    Partial Private Sub OnAdjustmentRequestedRecordIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnAdjustmentRequestedRecordIdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecordId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RecordId() As Integer
		Get
			Return Me._RecordId
		End Get
		Set
			If ((Me._RecordId = value)  _
						= false) Then
				Me.OnRecordIdChanging(value)
				Me.SendPropertyChanging
				Me._RecordId = value
				Me.SendPropertyChanged("RecordId")
				Me.OnRecordIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InventoryDescription", DbType:="VarChar(50)")>  _
	Public Property InventoryDescription() As String
		Get
			Return Me._InventoryDescription
		End Get
		Set
			If (String.Equals(Me._InventoryDescription, value) = false) Then
				Me.OnInventoryDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._InventoryDescription = value
				Me.SendPropertyChanged("InventoryDescription")
				Me.OnInventoryDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Quantity", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property Quantity() As Decimal
		Get
			Return Me._Quantity
		End Get
		Set
			If ((Me._Quantity = value)  _
						= false) Then
				Me.OnQuantityChanging(value)
				Me.SendPropertyChanging
				Me._Quantity = value
				Me.SendPropertyChanged("Quantity")
				Me.OnQuantityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostPrice", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property CostPrice() As Decimal
		Get
			Return Me._CostPrice
		End Get
		Set
			If ((Me._CostPrice = value)  _
						= false) Then
				Me.OnCostPriceChanging(value)
				Me.SendPropertyChanging
				Me._CostPrice = value
				Me.SendPropertyChanged("CostPrice")
				Me.OnCostPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CalcAmount", AutoSync:=AutoSync.Always, DbType:="Decimal(13,2)", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CalcAmount() As System.Nullable(Of Decimal)
		Get
			Return Me._CalcAmount
		End Get
		Set
			If (Me._CalcAmount.Equals(value) = false) Then
				Me.OnCalcAmountChanging(value)
				Me.SendPropertyChanging
				Me._CalcAmount = value
				Me.SendPropertyChanged("CalcAmount")
				Me.OnCalcAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Memo", DbType:="VarChar(255)")>  _
	Public Property Memo() As String
		Get
			Return Me._Memo
		End Get
		Set
			If (String.Equals(Me._Memo, value) = false) Then
				Me.OnMemoChanging(value)
				Me.SendPropertyChanging
				Me._Memo = value
				Me.SendPropertyChanged("Memo")
				Me.OnMemoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeRecordId", DbType:="Int NOT NULL")>  _
	Public Property EmployeeRecordId() As Integer
		Get
			Return Me._EmployeeRecordId
		End Get
		Set
			If ((Me._EmployeeRecordId = value)  _
						= false) Then
				Me.OnEmployeeRecordIdChanging(value)
				Me.SendPropertyChanging
				Me._EmployeeRecordId = value
				Me.SendPropertyChanged("EmployeeRecordId")
				Me.OnEmployeeRecordIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdjustmentRequestedRecordId", DbType:="Int NOT NULL")>  _
	Public Property AdjustmentRequestedRecordId() As Integer
		Get
			Return Me._AdjustmentRequestedRecordId
		End Get
		Set
			If ((Me._AdjustmentRequestedRecordId = value)  _
						= false) Then
				Me.OnAdjustmentRequestedRecordIdChanging(value)
				Me.SendPropertyChanging
				Me._AdjustmentRequestedRecordId = value
				Me.SendPropertyChanged("AdjustmentRequestedRecordId")
				Me.OnAdjustmentRequestedRecordIdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
