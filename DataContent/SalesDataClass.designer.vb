'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="CM")>  _
Partial Public Class SalesDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertSales(instance As Sales)
    End Sub
  Partial Private Sub UpdateSales(instance As Sales)
    End Sub
  Partial Private Sub DeleteSales(instance As Sales)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CashManagement.My.MySettings.Default.CMConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Sales() As System.Data.Linq.Table(Of Sales)
		Get
			Return Me.GetTable(Of Sales)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Sales")>  _
Partial Public Class Sales
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RecordId As Integer
	
	Private _Date As Date
	
	Private _GrossSales As Decimal
	
	Private _Payout As Decimal
	
	Private _TurnoverCash As Decimal
	
	Private _TurnoverCreditCard As Decimal
	
	Private _TurnoverOther As Decimal
	
	Private _StaffPercent100 As Decimal
	
	Private _DiscountPercent20 As Decimal
	
	Private _WastagePercent100 As Decimal
	
	Private _PromoPercent100 As Decimal
	
	Private _OverbakePercent100 As Decimal
	
	Private _DamagePercent100 As Decimal
	
	Private _SamplePercent100 As Decimal
	
	Private _StockVarianceValue As Decimal
	
	Private _Memo As String
	
	Private _EmployeeRecordId As Integer
	
	Private _ChecksPaid As Integer
	
	Private _ErrorCorrects As Integer
	
	Private _ErrorCorrectsValue As Decimal
	
	Private _Void As Integer
	
	Private _VoidsValue As Decimal
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRecordIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecordIdChanged()
    End Sub
    Partial Private Sub OnDateChanging(value As Date)
    End Sub
    Partial Private Sub OnDateChanged()
    End Sub
    Partial Private Sub OnGrossSalesChanging(value As Decimal)
    End Sub
    Partial Private Sub OnGrossSalesChanged()
    End Sub
    Partial Private Sub OnPayoutChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPayoutChanged()
    End Sub
    Partial Private Sub OnTurnoverCashChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTurnoverCashChanged()
    End Sub
    Partial Private Sub OnTurnoverCreditCardChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTurnoverCreditCardChanged()
    End Sub
    Partial Private Sub OnTurnoverOtherChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTurnoverOtherChanged()
    End Sub
    Partial Private Sub OnStaffPercent100Changing(value As Decimal)
    End Sub
    Partial Private Sub OnStaffPercent100Changed()
    End Sub
    Partial Private Sub OnDiscountPercent20Changing(value As Decimal)
    End Sub
    Partial Private Sub OnDiscountPercent20Changed()
    End Sub
    Partial Private Sub OnWastagePercent100Changing(value As Decimal)
    End Sub
    Partial Private Sub OnWastagePercent100Changed()
    End Sub
    Partial Private Sub OnPromoPercent100Changing(value As Decimal)
    End Sub
    Partial Private Sub OnPromoPercent100Changed()
    End Sub
    Partial Private Sub OnOverbakePercent100Changing(value As Decimal)
    End Sub
    Partial Private Sub OnOverbakePercent100Changed()
    End Sub
    Partial Private Sub OnDamagePercent100Changing(value As Decimal)
    End Sub
    Partial Private Sub OnDamagePercent100Changed()
    End Sub
    Partial Private Sub OnSamplePercent100Changing(value As Decimal)
    End Sub
    Partial Private Sub OnSamplePercent100Changed()
    End Sub
    Partial Private Sub OnStockVarianceValueChanging(value As Decimal)
    End Sub
    Partial Private Sub OnStockVarianceValueChanged()
    End Sub
    Partial Private Sub OnMemoChanging(value As String)
    End Sub
    Partial Private Sub OnMemoChanged()
    End Sub
    Partial Private Sub OnEmployeeRecordIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnEmployeeRecordIdChanged()
    End Sub
    Partial Private Sub OnChecksPaidChanging(value As Integer)
    End Sub
    Partial Private Sub OnChecksPaidChanged()
    End Sub
    Partial Private Sub OnErrorCorrectsChanging(value As Integer)
    End Sub
    Partial Private Sub OnErrorCorrectsChanged()
    End Sub
    Partial Private Sub OnErrorCorrectsValueChanging(value As Decimal)
    End Sub
    Partial Private Sub OnErrorCorrectsValueChanged()
    End Sub
    Partial Private Sub OnVoidChanging(value As Integer)
    End Sub
    Partial Private Sub OnVoidChanged()
    End Sub
    Partial Private Sub OnVoidsValueChanging(value As Decimal)
    End Sub
    Partial Private Sub OnVoidsValueChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecordId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RecordId() As Integer
		Get
			Return Me._RecordId
		End Get
		Set
			If ((Me._RecordId = value)  _
						= false) Then
				Me.OnRecordIdChanging(value)
				Me.SendPropertyChanging
				Me._RecordId = value
				Me.SendPropertyChanged("RecordId")
				Me.OnRecordIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Date", Storage:="_Date", DbType:="Date NOT NULL")>  _
	Public Property [Date]() As Date
		Get
			Return Me._Date
		End Get
		Set
			If ((Me._Date = value)  _
						= false) Then
				Me.OnDateChanging(value)
				Me.SendPropertyChanging
				Me._Date = value
				Me.SendPropertyChanged("[Date]")
				Me.OnDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GrossSales", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property GrossSales() As Decimal
		Get
			Return Me._GrossSales
		End Get
		Set
			If ((Me._GrossSales = value)  _
						= false) Then
				Me.OnGrossSalesChanging(value)
				Me.SendPropertyChanging
				Me._GrossSales = value
				Me.SendPropertyChanged("GrossSales")
				Me.OnGrossSalesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Payout", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property Payout() As Decimal
		Get
			Return Me._Payout
		End Get
		Set
			If ((Me._Payout = value)  _
						= false) Then
				Me.OnPayoutChanging(value)
				Me.SendPropertyChanging
				Me._Payout = value
				Me.SendPropertyChanged("Payout")
				Me.OnPayoutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TurnoverCash", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property TurnoverCash() As Decimal
		Get
			Return Me._TurnoverCash
		End Get
		Set
			If ((Me._TurnoverCash = value)  _
						= false) Then
				Me.OnTurnoverCashChanging(value)
				Me.SendPropertyChanging
				Me._TurnoverCash = value
				Me.SendPropertyChanged("TurnoverCash")
				Me.OnTurnoverCashChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TurnoverCreditCard", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property TurnoverCreditCard() As Decimal
		Get
			Return Me._TurnoverCreditCard
		End Get
		Set
			If ((Me._TurnoverCreditCard = value)  _
						= false) Then
				Me.OnTurnoverCreditCardChanging(value)
				Me.SendPropertyChanging
				Me._TurnoverCreditCard = value
				Me.SendPropertyChanged("TurnoverCreditCard")
				Me.OnTurnoverCreditCardChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TurnoverOther", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property TurnoverOther() As Decimal
		Get
			Return Me._TurnoverOther
		End Get
		Set
			If ((Me._TurnoverOther = value)  _
						= false) Then
				Me.OnTurnoverOtherChanging(value)
				Me.SendPropertyChanging
				Me._TurnoverOther = value
				Me.SendPropertyChanged("TurnoverOther")
				Me.OnTurnoverOtherChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffPercent100", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property StaffPercent100() As Decimal
		Get
			Return Me._StaffPercent100
		End Get
		Set
			If ((Me._StaffPercent100 = value)  _
						= false) Then
				Me.OnStaffPercent100Changing(value)
				Me.SendPropertyChanging
				Me._StaffPercent100 = value
				Me.SendPropertyChanged("StaffPercent100")
				Me.OnStaffPercent100Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountPercent20", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property DiscountPercent20() As Decimal
		Get
			Return Me._DiscountPercent20
		End Get
		Set
			If ((Me._DiscountPercent20 = value)  _
						= false) Then
				Me.OnDiscountPercent20Changing(value)
				Me.SendPropertyChanging
				Me._DiscountPercent20 = value
				Me.SendPropertyChanged("DiscountPercent20")
				Me.OnDiscountPercent20Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WastagePercent100", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property WastagePercent100() As Decimal
		Get
			Return Me._WastagePercent100
		End Get
		Set
			If ((Me._WastagePercent100 = value)  _
						= false) Then
				Me.OnWastagePercent100Changing(value)
				Me.SendPropertyChanging
				Me._WastagePercent100 = value
				Me.SendPropertyChanged("WastagePercent100")
				Me.OnWastagePercent100Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PromoPercent100", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property PromoPercent100() As Decimal
		Get
			Return Me._PromoPercent100
		End Get
		Set
			If ((Me._PromoPercent100 = value)  _
						= false) Then
				Me.OnPromoPercent100Changing(value)
				Me.SendPropertyChanging
				Me._PromoPercent100 = value
				Me.SendPropertyChanged("PromoPercent100")
				Me.OnPromoPercent100Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OverbakePercent100", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property OverbakePercent100() As Decimal
		Get
			Return Me._OverbakePercent100
		End Get
		Set
			If ((Me._OverbakePercent100 = value)  _
						= false) Then
				Me.OnOverbakePercent100Changing(value)
				Me.SendPropertyChanging
				Me._OverbakePercent100 = value
				Me.SendPropertyChanged("OverbakePercent100")
				Me.OnOverbakePercent100Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DamagePercent100", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property DamagePercent100() As Decimal
		Get
			Return Me._DamagePercent100
		End Get
		Set
			If ((Me._DamagePercent100 = value)  _
						= false) Then
				Me.OnDamagePercent100Changing(value)
				Me.SendPropertyChanging
				Me._DamagePercent100 = value
				Me.SendPropertyChanged("DamagePercent100")
				Me.OnDamagePercent100Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SamplePercent100", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property SamplePercent100() As Decimal
		Get
			Return Me._SamplePercent100
		End Get
		Set
			If ((Me._SamplePercent100 = value)  _
						= false) Then
				Me.OnSamplePercent100Changing(value)
				Me.SendPropertyChanging
				Me._SamplePercent100 = value
				Me.SendPropertyChanged("SamplePercent100")
				Me.OnSamplePercent100Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StockVarianceValue", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property StockVarianceValue() As Decimal
		Get
			Return Me._StockVarianceValue
		End Get
		Set
			If ((Me._StockVarianceValue = value)  _
						= false) Then
				Me.OnStockVarianceValueChanging(value)
				Me.SendPropertyChanging
				Me._StockVarianceValue = value
				Me.SendPropertyChanged("StockVarianceValue")
				Me.OnStockVarianceValueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Memo", DbType:="VarChar(255)")>  _
	Public Property Memo() As String
		Get
			Return Me._Memo
		End Get
		Set
			If (String.Equals(Me._Memo, value) = false) Then
				Me.OnMemoChanging(value)
				Me.SendPropertyChanging
				Me._Memo = value
				Me.SendPropertyChanged("Memo")
				Me.OnMemoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeRecordId", DbType:="Int NOT NULL")>  _
	Public Property EmployeeRecordId() As Integer
		Get
			Return Me._EmployeeRecordId
		End Get
		Set
			If ((Me._EmployeeRecordId = value)  _
						= false) Then
				Me.OnEmployeeRecordIdChanging(value)
				Me.SendPropertyChanging
				Me._EmployeeRecordId = value
				Me.SendPropertyChanged("EmployeeRecordId")
				Me.OnEmployeeRecordIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChecksPaid", DbType:="Int NOT NULL")>  _
	Public Property ChecksPaid() As Integer
		Get
			Return Me._ChecksPaid
		End Get
		Set
			If ((Me._ChecksPaid = value)  _
						= false) Then
				Me.OnChecksPaidChanging(value)
				Me.SendPropertyChanging
				Me._ChecksPaid = value
				Me.SendPropertyChanged("ChecksPaid")
				Me.OnChecksPaidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ErrorCorrects", DbType:="Int NOT NULL")>  _
	Public Property ErrorCorrects() As Integer
		Get
			Return Me._ErrorCorrects
		End Get
		Set
			If ((Me._ErrorCorrects = value)  _
						= false) Then
				Me.OnErrorCorrectsChanging(value)
				Me.SendPropertyChanging
				Me._ErrorCorrects = value
				Me.SendPropertyChanged("ErrorCorrects")
				Me.OnErrorCorrectsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ErrorCorrectsValue", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property ErrorCorrectsValue() As Decimal
		Get
			Return Me._ErrorCorrectsValue
		End Get
		Set
			If ((Me._ErrorCorrectsValue = value)  _
						= false) Then
				Me.OnErrorCorrectsValueChanging(value)
				Me.SendPropertyChanging
				Me._ErrorCorrectsValue = value
				Me.SendPropertyChanged("ErrorCorrectsValue")
				Me.OnErrorCorrectsValueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Void", DbType:="Int NOT NULL")>  _
	Public Property Void() As Integer
		Get
			Return Me._Void
		End Get
		Set
			If ((Me._Void = value)  _
						= false) Then
				Me.OnVoidChanging(value)
				Me.SendPropertyChanging
				Me._Void = value
				Me.SendPropertyChanged("Void")
				Me.OnVoidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VoidsValue", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property VoidsValue() As Decimal
		Get
			Return Me._VoidsValue
		End Get
		Set
			If ((Me._VoidsValue = value)  _
						= false) Then
				Me.OnVoidsValueChanging(value)
				Me.SendPropertyChanging
				Me._VoidsValue = value
				Me.SendPropertyChanged("VoidsValue")
				Me.OnVoidsValueChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
