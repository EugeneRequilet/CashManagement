'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="CM")>  _
Partial Public Class EmployeeViewDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CashManagement.My.MySettings.Default.CMConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property EmployeeViews() As System.Data.Linq.Table(Of EmployeeView)
		Get
			Return Me.GetTable(Of EmployeeView)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.EmployeeView")>  _
Partial Public Class EmployeeView
	
	Private _RecordId As Integer
	
	Private _Code As String
	
	Private _Description As String
	
	Private _FirstName As String
	
	Private _Surname As String
	
	Private _EmployeeTypeDescription As String
	
	Private _DateStarted As System.Nullable(Of Date)
	
	Private _HomeTelephone As String
	
	Private _CellNumber As String
	
	Private _IDNumber As String
	
	Private _InactiveEmployee As System.Nullable(Of Integer)
	
	Private _InactiveEmployeeDescription As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecordId", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property RecordId() As Integer
		Get
			Return Me._RecordId
		End Get
		Set
			If ((Me._RecordId = value)  _
						= false) Then
				Me._RecordId = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="VarChar(5) NOT NULL", CanBeNull:=false)>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me._Code = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(51) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstName", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property FirstName() As String
		Get
			Return Me._FirstName
		End Get
		Set
			If (String.Equals(Me._FirstName, value) = false) Then
				Me._FirstName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Surname", DbType:="VarChar(30)")>  _
	Public Property Surname() As String
		Get
			Return Me._Surname
		End Get
		Set
			If (String.Equals(Me._Surname, value) = false) Then
				Me._Surname = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeTypeDescription", DbType:="VarChar(13)")>  _
	Public Property EmployeeTypeDescription() As String
		Get
			Return Me._EmployeeTypeDescription
		End Get
		Set
			If (String.Equals(Me._EmployeeTypeDescription, value) = false) Then
				Me._EmployeeTypeDescription = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateStarted", DbType:="Date")>  _
	Public Property DateStarted() As System.Nullable(Of Date)
		Get
			Return Me._DateStarted
		End Get
		Set
			If (Me._DateStarted.Equals(value) = false) Then
				Me._DateStarted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HomeTelephone", DbType:="VarChar(15)")>  _
	Public Property HomeTelephone() As String
		Get
			Return Me._HomeTelephone
		End Get
		Set
			If (String.Equals(Me._HomeTelephone, value) = false) Then
				Me._HomeTelephone = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CellNumber", DbType:="VarChar(15)")>  _
	Public Property CellNumber() As String
		Get
			Return Me._CellNumber
		End Get
		Set
			If (String.Equals(Me._CellNumber, value) = false) Then
				Me._CellNumber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDNumber", DbType:="VarChar(20)")>  _
	Public Property IDNumber() As String
		Get
			Return Me._IDNumber
		End Get
		Set
			If (String.Equals(Me._IDNumber, value) = false) Then
				Me._IDNumber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InactiveEmployee", DbType:="Int")>  _
	Public Property InactiveEmployee() As System.Nullable(Of Integer)
		Get
			Return Me._InactiveEmployee
		End Get
		Set
			If (Me._InactiveEmployee.Equals(value) = false) Then
				Me._InactiveEmployee = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InactiveEmployeeDescription", DbType:="VarChar(8)")>  _
	Public Property InactiveEmployeeDescription() As String
		Get
			Return Me._InactiveEmployeeDescription
		End Get
		Set
			If (String.Equals(Me._InactiveEmployeeDescription, value) = false) Then
				Me._InactiveEmployeeDescription = value
			End If
		End Set
	End Property
End Class
