'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="CM")>  _
Partial Public Class EmployeeDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertEmployee(instance As Employee)
    End Sub
  Partial Private Sub UpdateEmployee(instance As Employee)
    End Sub
  Partial Private Sub DeleteEmployee(instance As Employee)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CashManagement.My.MySettings.Default.CMConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Employees() As System.Data.Linq.Table(Of Employee)
		Get
			Return Me.GetTable(Of Employee)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Employee")>  _
Partial Public Class Employee
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RecordId As Integer
	
	Private _Description As String
	
	Private _Code As String
	
	Private _Password As String
	
	Private _FirstName As String
	
	Private _Surname As String
	
	Private _IDNumber As String
	
	Private _Gender As String
	
	Private _MaritalStatus As String
	
	Private _NoOfDependants As System.Nullable(Of Integer)
	
	Private _DateStarted As System.Nullable(Of Date)
	
	Private _Rate As System.Nullable(Of Decimal)
	
	Private _HomeTelephone As String
	
	Private _CellNumber As String
	
	Private _ResdentialAddress1 As String
	
	Private _ResdentialAddress2 As String
	
	Private _ResdentialAddress3 As String
	
	Private _ResdentialCode As String
	
	Private _PostalAddress1 As String
	
	Private _PostalAddress2 As String
	
	Private _PostalAddress3 As String
	
	Private _PostalCode As String
	
	Private _BankName As String
	
	Private _BranchName As String
	
	Private _BranchNumber As String
	
	Private _AccountNumber As String
	
	Private _AccountType As String
	
	Private _InactiveEmployee As System.Nullable(Of Integer)
	
	Private _EmployeeType As Integer
	
	Private _TaxNumber As String
	
	Private _ContactName As String
	
	Private _ContactRelationship As String
	
	Private _ContactPhone As String
	
	Private _YTDLeaveDaysTaken As Decimal
	
	Private _YTDLeaveMemo As String
	
	Private _YTDSickDaysTaken As Decimal
	
	Private _BranchCode As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRecordIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecordIdChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnPasswordChanging(value As String)
    End Sub
    Partial Private Sub OnPasswordChanged()
    End Sub
    Partial Private Sub OnFirstNameChanging(value As String)
    End Sub
    Partial Private Sub OnFirstNameChanged()
    End Sub
    Partial Private Sub OnSurnameChanging(value As String)
    End Sub
    Partial Private Sub OnSurnameChanged()
    End Sub
    Partial Private Sub OnIDNumberChanging(value As String)
    End Sub
    Partial Private Sub OnIDNumberChanged()
    End Sub
    Partial Private Sub OnGenderChanging(value As String)
    End Sub
    Partial Private Sub OnGenderChanged()
    End Sub
    Partial Private Sub OnMaritalStatusChanging(value As String)
    End Sub
    Partial Private Sub OnMaritalStatusChanged()
    End Sub
    Partial Private Sub OnNoOfDependantsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNoOfDependantsChanged()
    End Sub
    Partial Private Sub OnDateStartedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateStartedChanged()
    End Sub
    Partial Private Sub OnRateChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnRateChanged()
    End Sub
    Partial Private Sub OnHomeTelephoneChanging(value As String)
    End Sub
    Partial Private Sub OnHomeTelephoneChanged()
    End Sub
    Partial Private Sub OnCellNumberChanging(value As String)
    End Sub
    Partial Private Sub OnCellNumberChanged()
    End Sub
    Partial Private Sub OnResdentialAddress1Changing(value As String)
    End Sub
    Partial Private Sub OnResdentialAddress1Changed()
    End Sub
    Partial Private Sub OnResdentialAddress2Changing(value As String)
    End Sub
    Partial Private Sub OnResdentialAddress2Changed()
    End Sub
    Partial Private Sub OnResdentialAddress3Changing(value As String)
    End Sub
    Partial Private Sub OnResdentialAddress3Changed()
    End Sub
    Partial Private Sub OnResdentialCodeChanging(value As String)
    End Sub
    Partial Private Sub OnResdentialCodeChanged()
    End Sub
    Partial Private Sub OnPostalAddress1Changing(value As String)
    End Sub
    Partial Private Sub OnPostalAddress1Changed()
    End Sub
    Partial Private Sub OnPostalAddress2Changing(value As String)
    End Sub
    Partial Private Sub OnPostalAddress2Changed()
    End Sub
    Partial Private Sub OnPostalAddress3Changing(value As String)
    End Sub
    Partial Private Sub OnPostalAddress3Changed()
    End Sub
    Partial Private Sub OnPostalCodeChanging(value As String)
    End Sub
    Partial Private Sub OnPostalCodeChanged()
    End Sub
    Partial Private Sub OnBankNameChanging(value As String)
    End Sub
    Partial Private Sub OnBankNameChanged()
    End Sub
    Partial Private Sub OnBranchNameChanging(value As String)
    End Sub
    Partial Private Sub OnBranchNameChanged()
    End Sub
    Partial Private Sub OnBranchNumberChanging(value As String)
    End Sub
    Partial Private Sub OnBranchNumberChanged()
    End Sub
    Partial Private Sub OnAccountNumberChanging(value As String)
    End Sub
    Partial Private Sub OnAccountNumberChanged()
    End Sub
    Partial Private Sub OnAccountTypeChanging(value As String)
    End Sub
    Partial Private Sub OnAccountTypeChanged()
    End Sub
    Partial Private Sub OnInactiveEmployeeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInactiveEmployeeChanged()
    End Sub
    Partial Private Sub OnEmployeeTypeChanging(value As Integer)
    End Sub
    Partial Private Sub OnEmployeeTypeChanged()
    End Sub
    Partial Private Sub OnTaxNumberChanging(value As String)
    End Sub
    Partial Private Sub OnTaxNumberChanged()
    End Sub
    Partial Private Sub OnContactNameChanging(value As String)
    End Sub
    Partial Private Sub OnContactNameChanged()
    End Sub
    Partial Private Sub OnContactRelationshipChanging(value As String)
    End Sub
    Partial Private Sub OnContactRelationshipChanged()
    End Sub
    Partial Private Sub OnContactPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnContactPhoneChanged()
    End Sub
    Partial Private Sub OnYTDLeaveDaysTakenChanging(value As Decimal)
    End Sub
    Partial Private Sub OnYTDLeaveDaysTakenChanged()
    End Sub
    Partial Private Sub OnYTDLeaveMemoChanging(value As String)
    End Sub
    Partial Private Sub OnYTDLeaveMemoChanged()
    End Sub
    Partial Private Sub OnYTDSickDaysTakenChanging(value As Decimal)
    End Sub
    Partial Private Sub OnYTDSickDaysTakenChanged()
    End Sub
    Partial Private Sub OnBranchCodeChanging(value As String)
    End Sub
    Partial Private Sub OnBranchCodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecordId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RecordId() As Integer
		Get
			Return Me._RecordId
		End Get
		Set
			If ((Me._RecordId = value)  _
						= false) Then
				Me.OnRecordIdChanging(value)
				Me.SendPropertyChanging
				Me._RecordId = value
				Me.SendPropertyChanged("RecordId")
				Me.OnRecordIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", AutoSync:=AutoSync.Always, DbType:="VarChar(51) NOT NULL", CanBeNull:=false, IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="VarChar(5) NOT NULL", CanBeNull:=false)>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me.OnCodeChanging(value)
				Me.SendPropertyChanging
				Me._Code = value
				Me.SendPropertyChanged("Code")
				Me.OnCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Password", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Password() As String
		Get
			Return Me._Password
		End Get
		Set
			If (String.Equals(Me._Password, value) = false) Then
				Me.OnPasswordChanging(value)
				Me.SendPropertyChanging
				Me._Password = value
				Me.SendPropertyChanged("Password")
				Me.OnPasswordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstName", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property FirstName() As String
		Get
			Return Me._FirstName
		End Get
		Set
			If (String.Equals(Me._FirstName, value) = false) Then
				Me.OnFirstNameChanging(value)
				Me.SendPropertyChanging
				Me._FirstName = value
				Me.SendPropertyChanged("FirstName")
				Me.OnFirstNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Surname", DbType:="VarChar(30)")>  _
	Public Property Surname() As String
		Get
			Return Me._Surname
		End Get
		Set
			If (String.Equals(Me._Surname, value) = false) Then
				Me.OnSurnameChanging(value)
				Me.SendPropertyChanging
				Me._Surname = value
				Me.SendPropertyChanged("Surname")
				Me.OnSurnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDNumber", DbType:="VarChar(20)")>  _
	Public Property IDNumber() As String
		Get
			Return Me._IDNumber
		End Get
		Set
			If (String.Equals(Me._IDNumber, value) = false) Then
				Me.OnIDNumberChanging(value)
				Me.SendPropertyChanging
				Me._IDNumber = value
				Me.SendPropertyChanged("IDNumber")
				Me.OnIDNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gender", DbType:="VarChar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property Gender() As String
		Get
			Return Me._Gender
		End Get
		Set
			If (String.Equals(Me._Gender, value) = false) Then
				Me.OnGenderChanging(value)
				Me.SendPropertyChanging
				Me._Gender = value
				Me.SendPropertyChanged("Gender")
				Me.OnGenderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaritalStatus", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property MaritalStatus() As String
		Get
			Return Me._MaritalStatus
		End Get
		Set
			If (String.Equals(Me._MaritalStatus, value) = false) Then
				Me.OnMaritalStatusChanging(value)
				Me.SendPropertyChanging
				Me._MaritalStatus = value
				Me.SendPropertyChanged("MaritalStatus")
				Me.OnMaritalStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoOfDependants", DbType:="Int")>  _
	Public Property NoOfDependants() As System.Nullable(Of Integer)
		Get
			Return Me._NoOfDependants
		End Get
		Set
			If (Me._NoOfDependants.Equals(value) = false) Then
				Me.OnNoOfDependantsChanging(value)
				Me.SendPropertyChanging
				Me._NoOfDependants = value
				Me.SendPropertyChanged("NoOfDependants")
				Me.OnNoOfDependantsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateStarted", DbType:="Date")>  _
	Public Property DateStarted() As System.Nullable(Of Date)
		Get
			Return Me._DateStarted
		End Get
		Set
			If (Me._DateStarted.Equals(value) = false) Then
				Me.OnDateStartedChanging(value)
				Me.SendPropertyChanging
				Me._DateStarted = value
				Me.SendPropertyChanged("DateStarted")
				Me.OnDateStartedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rate", DbType:="Decimal(13,2)")>  _
	Public Property Rate() As System.Nullable(Of Decimal)
		Get
			Return Me._Rate
		End Get
		Set
			If (Me._Rate.Equals(value) = false) Then
				Me.OnRateChanging(value)
				Me.SendPropertyChanging
				Me._Rate = value
				Me.SendPropertyChanged("Rate")
				Me.OnRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HomeTelephone", DbType:="VarChar(15)")>  _
	Public Property HomeTelephone() As String
		Get
			Return Me._HomeTelephone
		End Get
		Set
			If (String.Equals(Me._HomeTelephone, value) = false) Then
				Me.OnHomeTelephoneChanging(value)
				Me.SendPropertyChanging
				Me._HomeTelephone = value
				Me.SendPropertyChanged("HomeTelephone")
				Me.OnHomeTelephoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CellNumber", DbType:="VarChar(15)")>  _
	Public Property CellNumber() As String
		Get
			Return Me._CellNumber
		End Get
		Set
			If (String.Equals(Me._CellNumber, value) = false) Then
				Me.OnCellNumberChanging(value)
				Me.SendPropertyChanging
				Me._CellNumber = value
				Me.SendPropertyChanged("CellNumber")
				Me.OnCellNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ResdentialAddress1", DbType:="VarChar(30)")>  _
	Public Property ResdentialAddress1() As String
		Get
			Return Me._ResdentialAddress1
		End Get
		Set
			If (String.Equals(Me._ResdentialAddress1, value) = false) Then
				Me.OnResdentialAddress1Changing(value)
				Me.SendPropertyChanging
				Me._ResdentialAddress1 = value
				Me.SendPropertyChanged("ResdentialAddress1")
				Me.OnResdentialAddress1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ResdentialAddress2", DbType:="VarChar(30)")>  _
	Public Property ResdentialAddress2() As String
		Get
			Return Me._ResdentialAddress2
		End Get
		Set
			If (String.Equals(Me._ResdentialAddress2, value) = false) Then
				Me.OnResdentialAddress2Changing(value)
				Me.SendPropertyChanging
				Me._ResdentialAddress2 = value
				Me.SendPropertyChanged("ResdentialAddress2")
				Me.OnResdentialAddress2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ResdentialAddress3", DbType:="VarChar(30)")>  _
	Public Property ResdentialAddress3() As String
		Get
			Return Me._ResdentialAddress3
		End Get
		Set
			If (String.Equals(Me._ResdentialAddress3, value) = false) Then
				Me.OnResdentialAddress3Changing(value)
				Me.SendPropertyChanging
				Me._ResdentialAddress3 = value
				Me.SendPropertyChanged("ResdentialAddress3")
				Me.OnResdentialAddress3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ResdentialCode", DbType:="VarChar(4)")>  _
	Public Property ResdentialCode() As String
		Get
			Return Me._ResdentialCode
		End Get
		Set
			If (String.Equals(Me._ResdentialCode, value) = false) Then
				Me.OnResdentialCodeChanging(value)
				Me.SendPropertyChanging
				Me._ResdentialCode = value
				Me.SendPropertyChanged("ResdentialCode")
				Me.OnResdentialCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostalAddress1", DbType:="VarChar(30)")>  _
	Public Property PostalAddress1() As String
		Get
			Return Me._PostalAddress1
		End Get
		Set
			If (String.Equals(Me._PostalAddress1, value) = false) Then
				Me.OnPostalAddress1Changing(value)
				Me.SendPropertyChanging
				Me._PostalAddress1 = value
				Me.SendPropertyChanged("PostalAddress1")
				Me.OnPostalAddress1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostalAddress2", DbType:="VarChar(30)")>  _
	Public Property PostalAddress2() As String
		Get
			Return Me._PostalAddress2
		End Get
		Set
			If (String.Equals(Me._PostalAddress2, value) = false) Then
				Me.OnPostalAddress2Changing(value)
				Me.SendPropertyChanging
				Me._PostalAddress2 = value
				Me.SendPropertyChanged("PostalAddress2")
				Me.OnPostalAddress2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostalAddress3", DbType:="VarChar(30)")>  _
	Public Property PostalAddress3() As String
		Get
			Return Me._PostalAddress3
		End Get
		Set
			If (String.Equals(Me._PostalAddress3, value) = false) Then
				Me.OnPostalAddress3Changing(value)
				Me.SendPropertyChanging
				Me._PostalAddress3 = value
				Me.SendPropertyChanged("PostalAddress3")
				Me.OnPostalAddress3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostalCode", DbType:="VarChar(4)")>  _
	Public Property PostalCode() As String
		Get
			Return Me._PostalCode
		End Get
		Set
			If (String.Equals(Me._PostalCode, value) = false) Then
				Me.OnPostalCodeChanging(value)
				Me.SendPropertyChanging
				Me._PostalCode = value
				Me.SendPropertyChanged("PostalCode")
				Me.OnPostalCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BankName", DbType:="VarChar(20)")>  _
	Public Property BankName() As String
		Get
			Return Me._BankName
		End Get
		Set
			If (String.Equals(Me._BankName, value) = false) Then
				Me.OnBankNameChanging(value)
				Me.SendPropertyChanging
				Me._BankName = value
				Me.SendPropertyChanged("BankName")
				Me.OnBankNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BranchName", DbType:="VarChar(20)")>  _
	Public Property BranchName() As String
		Get
			Return Me._BranchName
		End Get
		Set
			If (String.Equals(Me._BranchName, value) = false) Then
				Me.OnBranchNameChanging(value)
				Me.SendPropertyChanging
				Me._BranchName = value
				Me.SendPropertyChanged("BranchName")
				Me.OnBranchNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BranchNumber", DbType:="VarChar(20)")>  _
	Public Property BranchNumber() As String
		Get
			Return Me._BranchNumber
		End Get
		Set
			If (String.Equals(Me._BranchNumber, value) = false) Then
				Me.OnBranchNumberChanging(value)
				Me.SendPropertyChanging
				Me._BranchNumber = value
				Me.SendPropertyChanged("BranchNumber")
				Me.OnBranchNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountNumber", DbType:="VarChar(20)")>  _
	Public Property AccountNumber() As String
		Get
			Return Me._AccountNumber
		End Get
		Set
			If (String.Equals(Me._AccountNumber, value) = false) Then
				Me.OnAccountNumberChanging(value)
				Me.SendPropertyChanging
				Me._AccountNumber = value
				Me.SendPropertyChanged("AccountNumber")
				Me.OnAccountNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountType", DbType:="VarChar(20)")>  _
	Public Property AccountType() As String
		Get
			Return Me._AccountType
		End Get
		Set
			If (String.Equals(Me._AccountType, value) = false) Then
				Me.OnAccountTypeChanging(value)
				Me.SendPropertyChanging
				Me._AccountType = value
				Me.SendPropertyChanged("AccountType")
				Me.OnAccountTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InactiveEmployee", DbType:="Int")>  _
	Public Property InactiveEmployee() As System.Nullable(Of Integer)
		Get
			Return Me._InactiveEmployee
		End Get
		Set
			If (Me._InactiveEmployee.Equals(value) = false) Then
				Me.OnInactiveEmployeeChanging(value)
				Me.SendPropertyChanging
				Me._InactiveEmployee = value
				Me.SendPropertyChanged("InactiveEmployee")
				Me.OnInactiveEmployeeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmployeeType", DbType:="Int NOT NULL")>  _
	Public Property EmployeeType() As Integer
		Get
			Return Me._EmployeeType
		End Get
		Set
			If ((Me._EmployeeType = value)  _
						= false) Then
				Me.OnEmployeeTypeChanging(value)
				Me.SendPropertyChanging
				Me._EmployeeType = value
				Me.SendPropertyChanged("EmployeeType")
				Me.OnEmployeeTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaxNumber", DbType:="VarChar(20)")>  _
	Public Property TaxNumber() As String
		Get
			Return Me._TaxNumber
		End Get
		Set
			If (String.Equals(Me._TaxNumber, value) = false) Then
				Me.OnTaxNumberChanging(value)
				Me.SendPropertyChanging
				Me._TaxNumber = value
				Me.SendPropertyChanged("TaxNumber")
				Me.OnTaxNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactName", DbType:="VarChar(20)")>  _
	Public Property ContactName() As String
		Get
			Return Me._ContactName
		End Get
		Set
			If (String.Equals(Me._ContactName, value) = false) Then
				Me.OnContactNameChanging(value)
				Me.SendPropertyChanging
				Me._ContactName = value
				Me.SendPropertyChanged("ContactName")
				Me.OnContactNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactRelationship", DbType:="VarChar(20)")>  _
	Public Property ContactRelationship() As String
		Get
			Return Me._ContactRelationship
		End Get
		Set
			If (String.Equals(Me._ContactRelationship, value) = false) Then
				Me.OnContactRelationshipChanging(value)
				Me.SendPropertyChanging
				Me._ContactRelationship = value
				Me.SendPropertyChanged("ContactRelationship")
				Me.OnContactRelationshipChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactPhone", DbType:="VarChar(15)")>  _
	Public Property ContactPhone() As String
		Get
			Return Me._ContactPhone
		End Get
		Set
			If (String.Equals(Me._ContactPhone, value) = false) Then
				Me.OnContactPhoneChanging(value)
				Me.SendPropertyChanging
				Me._ContactPhone = value
				Me.SendPropertyChanged("ContactPhone")
				Me.OnContactPhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YTDLeaveDaysTaken", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property YTDLeaveDaysTaken() As Decimal
		Get
			Return Me._YTDLeaveDaysTaken
		End Get
		Set
			If ((Me._YTDLeaveDaysTaken = value)  _
						= false) Then
				Me.OnYTDLeaveDaysTakenChanging(value)
				Me.SendPropertyChanging
				Me._YTDLeaveDaysTaken = value
				Me.SendPropertyChanged("YTDLeaveDaysTaken")
				Me.OnYTDLeaveDaysTakenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YTDLeaveMemo", DbType:="VarChar(255)")>  _
	Public Property YTDLeaveMemo() As String
		Get
			Return Me._YTDLeaveMemo
		End Get
		Set
			If (String.Equals(Me._YTDLeaveMemo, value) = false) Then
				Me.OnYTDLeaveMemoChanging(value)
				Me.SendPropertyChanging
				Me._YTDLeaveMemo = value
				Me.SendPropertyChanged("YTDLeaveMemo")
				Me.OnYTDLeaveMemoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YTDSickDaysTaken", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property YTDSickDaysTaken() As Decimal
		Get
			Return Me._YTDSickDaysTaken
		End Get
		Set
			If ((Me._YTDSickDaysTaken = value)  _
						= false) Then
				Me.OnYTDSickDaysTakenChanging(value)
				Me.SendPropertyChanging
				Me._YTDSickDaysTaken = value
				Me.SendPropertyChanged("YTDSickDaysTaken")
				Me.OnYTDSickDaysTakenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BranchCode", DbType:="VarChar(5) NOT NULL", CanBeNull:=false)>  _
	Public Property BranchCode() As String
		Get
			Return Me._BranchCode
		End Get
		Set
			If (String.Equals(Me._BranchCode, value) = false) Then
				Me.OnBranchCodeChanging(value)
				Me.SendPropertyChanging
				Me._BranchCode = value
				Me.SendPropertyChanged("BranchCode")
				Me.OnBranchCodeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
