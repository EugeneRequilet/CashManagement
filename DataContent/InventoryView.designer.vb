'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="CM")>  _
Partial Public Class InventoryViewDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CashManagement.My.MySettings.Default.CMConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property InventoryViews() As System.Data.Linq.Table(Of InventoryView)
		Get
			Return Me.GetTable(Of InventoryView)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.InventoryView")>  _
Partial Public Class InventoryView
	
	Private _RecordId As Integer
	
	Private _Description As String
	
	Private _CostPrice As Decimal
	
	Private _SellingPrice As Decimal
	
	Private _SupplierId As Integer
	
	Private _SupplierDescription As String
	
	Private _InactiveInventory As Integer
	
	Private _InactiveInventoryDescription As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecordId", DbType:="Int NOT NULL")>  _
	Public Property RecordId() As Integer
		Get
			Return Me._RecordId
		End Get
		Set
			If ((Me._RecordId = value)  _
						= false) Then
				Me._RecordId = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostPrice", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property CostPrice() As Decimal
		Get
			Return Me._CostPrice
		End Get
		Set
			If ((Me._CostPrice = value)  _
						= false) Then
				Me._CostPrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SellingPrice", DbType:="Decimal(13,2) NOT NULL")>  _
	Public Property SellingPrice() As Decimal
		Get
			Return Me._SellingPrice
		End Get
		Set
			If ((Me._SellingPrice = value)  _
						= false) Then
				Me._SellingPrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SupplierId", DbType:="Int NOT NULL")>  _
	Public Property SupplierId() As Integer
		Get
			Return Me._SupplierId
		End Get
		Set
			If ((Me._SupplierId = value)  _
						= false) Then
				Me._SupplierId = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SupplierDescription", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property SupplierDescription() As String
		Get
			Return Me._SupplierDescription
		End Get
		Set
			If (String.Equals(Me._SupplierDescription, value) = false) Then
				Me._SupplierDescription = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InactiveInventory", DbType:="Int NOT NULL")>  _
	Public Property InactiveInventory() As Integer
		Get
			Return Me._InactiveInventory
		End Get
		Set
			If ((Me._InactiveInventory = value)  _
						= false) Then
				Me._InactiveInventory = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InactiveInventoryDescription", DbType:="VarChar(8)")>  _
	Public Property InactiveInventoryDescription() As String
		Get
			Return Me._InactiveInventoryDescription
		End Get
		Set
			If (String.Equals(Me._InactiveInventoryDescription, value) = false) Then
				Me._InactiveInventoryDescription = value
			End If
		End Set
	End Property
End Class
